{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pump",
				"pumpNumber"
			],
			[
				"SHOW",
				"showDeviceSelectionSplash"
			],
			[
				"fixationDiameter",
				"fixationDiameterDegrees"
			],
			[
				"key",
				"key2actionIndex"
			],
			[
				"handle",
				"handleKeyPressEvent"
			],
			[
				"overflow",
				"overflow-y\tproperty"
			],
			[
				"tStati",
				"tStatistic_criticalUb"
			],
			[
				"tS",
				"tStatistic_criticalLb"
			],
			[
				"performance",
				"performancePerBag"
			],
			[
				"empirical",
				"empiricalEffectSize"
			],
			[
				"sumPer",
				"sumPerformanceRest"
			],
			[
				"perform",
				"performancePerBag"
			],
			[
				"perof",
				"performancePerBag"
			],
			[
				"infer",
				"infer_load_method"
			],
			[
				"is_",
				"is_buffered"
			],
			[
				"create",
				"createBufferSource"
			],
			[
				"punish",
				"punish_sound"
			],
			[
				"necess",
				"necessaryKeyList"
			],
			[
				"nec",
				"necessaryKeyList"
			],
			[
				"__",
				"__TASK_SEQUENCE_GOES_HERE__"
			],
			[
				"game",
				"GAME"
			],
			[
				"CheckPointer",
				"CheckPointerClass"
			],
			[
				"num",
				"num_elements_in_cache"
			],
			[
				"start",
				"startsWith"
			],
			[
				"Te",
				"TERMINAL_STATE"
			],
			[
				"debugCheck",
				"debugCheckpointSavePath"
			],
			[
				"generate",
				"generate_default_checkpoint"
			],
			[
				"term",
				"TERMINAL_STATE"
			],
			[
				"current",
				"current_stage"
			],
			[
				"distractorBag",
				"distractorBagIdxPool"
			],
			[
				"actionC",
				"actionXCentroids"
			],
			[
				"virtual",
				"virtualPixelsPerInch"
			],
			[
				"scren",
				"screen_virtualPixelsPerInch"
			],
			[
				"stimulus_objectome",
				"stimulus_objectome_flute"
			],
			[
				"stimulus",
				"stimulus_objectome_pineapple"
			],
			[
				"imageBags",
				"check_imageBags"
			],
			[
				"ycent",
				"ycentroid_pixel"
			],
			[
				"fixation",
				"fixationRadius_pixel"
			],
			[
				"last_fi",
				"last_fixation_radius"
			],
			[
				"last_",
				"last_fixation_ycentroid"
			],
			[
				"last_fix",
				"last_fixation_xcentroid"
			],
			[
				"last",
				"last_fixation_radius"
			],
			[
				"periodic_rewa",
				"periodic_reward_interval"
			],
			[
				"transition",
				"transitionCriterionMet"
			],
			[
				"_image",
				"_image_cache"
			],
			[
				"_b",
				"_build_StateBags"
			],
			[
				"worker_id",
				"worker_id_encrypted"
			],
			[
				"bonus_paid_",
				"bonus_paid_unix_timestamp"
			],
			[
				"bonus_amo",
				"bonus_paid_amount_USD"
			],
			[
				"Worker",
				"WorkerID_encrypted"
			],
			[
				"Assignment",
				"AssignmentId"
			],
			[
				"NUM_",
				"TRIAL_NUMBER_FROM_SESSION_START"
			],
			[
				"read",
				"readAsArrayBuffer"
			],
			[
				"current_trial",
				"current_stage_trial_number"
			],
			[
				"test_image",
				"test_images_q"
			],
			[
				"DBX",
				"DBX_REDIRECT_URI_ROOT"
			],
			[
				"Experim",
				"ExperimentFilePath"
			],
			[
				"curre",
				"current_trial_outcome"
			],
			[
				"get",
				"get_juiceRequest_filepath"
			],
			[
				"jucie",
				"juiceChangeRequest"
			],
			[
				"task",
				"TASK_idx"
			],
			[
				"TRIAL",
				"TRIALDATA_SAVE_TIMEOUT_PERIOD_IN_SECONDS"
			],
			[
				"need2",
				"need2loadParameters"
			],
			[
				"Current",
				"CurrentAutomatorStage"
			],
			[
				"Curre",
				"CurrentAutomatorStage"
			],
			[
				"num_train",
				"num_train_per_obj"
			],
			[
				"objA",
				"objAobjB_2_negative_tasks_idx"
			],
			[
				"im1obj",
				"im1objB_2_negative_tasks_idx"
			],
			[
				"objAobjB_2",
				"objAobjB_2_positive_tasks_idx"
			],
			[
				"obj0",
				"obj0_is_correct_and_obj1_is_distractor_trial_idx"
			],
			[
				"obj_2_is",
				"obj_2_is_distractor_idx"
			],
			[
				"tk_2_",
				"tk_2_permuted_idx"
			],
			[
				"random",
				"random_state"
			],
			[
				"c",
				"c"
			],
			[
				"x_novel",
				"x_novel_embedded"
			],
			[
				"x_support",
				"x_support_embedded"
			],
			[
				"drop",
				"dropout_keep_prob"
			],
			[
				"inverse",
				"inverse_mapping"
			],
			[
				"y_novel",
				"y_novel_vectorized"
			],
			[
				"int_label",
				"int_label_space"
			],
			[
				"y_support",
				"y_support_vectorized"
			],
			[
				"exemplars",
				"exemplars_per_class_in_batch"
			],
			[
				"exemplar",
				"exemplars_per_class_in_batch"
			],
			[
				"reuse",
				"reuse_variables"
			],
			[
				"embedde",
				"embedded_x_support"
			],
			[
				"embe",
				"embedded_x_novel"
			],
			[
				"image_resize",
				"image_resize_dims"
			],
			[
				"emb",
				"embedded_support_set"
			],
			[
				"checkpoin",
				"checkpoint_path"
			],
			[
				"check",
				"checkpoint_path"
			],
			[
				"image_resi",
				"image_resize_dims"
			],
			[
				"_train",
				"_train_writer"
			],
			[
				"num_obj",
				"num_obj_dimensions"
			],
			[
				"cell_state",
				"cell_state"
			],
			[
				"_predi",
				"_predictor_constructor"
			],
			[
				"_last",
				"_lastinternalpreds"
			],
			[
				"TaskStream",
				"TaskStreamSampling_RNGseed"
			],
			[
				"qval",
				"qval_test"
			],
			[
				"cheby",
				"chebyshev_polynomials"
			],
			[
				"j",
				"j"
			],
			[
				"_coef",
				"_coef"
			],
			[
				"_laststa",
				"_last_state_val"
			],
			[
				"_lastst",
				"_last_state_val"
			],
			[
				"regress",
				"regression_variables"
			],
			[
				"x_action",
				"x_action_internal"
			],
			[
				"state",
				"state_b"
			],
			[
				"_last_state",
				"_last_state_b"
			],
			[
				"sigma",
				"sigma_grad_numerator"
			],
			[
				"_laststate",
				"_last_state_b"
			],
			[
				"_lastact",
				"_lastaction_value_predictions"
			],
			[
				"_last_st",
				"_last_state_val"
			],
			[
				"_lastaction",
				"_lastactionprob"
			],
			[
				"_last_X",
				"_last_X_mu"
			],
			[
				"_policy",
				"_policy_Xstdev_coef"
			],
			[
				"len",
				"len"
			],
			[
				"_policy_X",
				"_policy_Xmu_coef"
			],
			[
				"num_exem",
				"num_exemplars_per_obj"
			],
			[
				"F",
				"F"
			],
			[
				"reward",
				"reward_sigma_proportion"
			],
			[
				"image",
				"image_x"
			],
			[
				"d",
				"d"
			],
			[
				"trial",
				"trial_number"
			],
			[
				"_acti",
				"_action_2_internallabel_dict"
			],
			[
				"_internal",
				"_internallabels"
			],
			[
				"_inte",
				"_internallabels"
			],
			[
				"_in",
				"_internallabel_2_action_dict"
			],
			[
				"pool",
				"pool_objlabels"
			],
			[
				"typ",
				"typ"
			]
		]
	},
	"buffers":
	[
		{
			"file": "public/mkturk_ActionPoller.js",
			"settings":
			{
				"buffer_size": 10330,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_ScreenDisplayer.js",
			"settings":
			{
				"buffer_size": 19669,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "class PlaySpaceClass{\n    constructor(playspacePackage){\n        var playspace_isFullScreen = playspacePackage['playspace_isFullScreen']\n        var playspace_degreesVisualAngle = playspacePackage['playspace_degreesVisualAngle'] \n        var playspace_verticalOffsetInches = playspacePackage['playspace_verticalOffsetInches']\n        var playspace_viewingDistanceInches = playspacePackage['playspace_viewingDistanceInches']\n        var screen_virtualPixelsPerInch = playspacePackage['screen_virtualPixelsPerInch']\n        var primary_reinforcer_type = playspacePackage['primary_reinforcer_type'] \n        var action_event_type = playspacePackage['action_event_type'] \n        var periodicRewardIntervalMsec = playspacePackage['periodicRewardIntervalMsec'] \n        var periodicRewardAmount = playspacePackage['periodicRewardAmount'] \n        var bonusUSDPerCorrect = playspacePackage['bonusUSDPerCorrect'] \n        var juiceRewardPer1000 = playspacePackage['juiceRewardPer1000Trials']\n        var pumpNumber = playspacePackage['pumpNumber']\n        this.viewingDistanceInches = playspace_viewingDistanceInches\n        this.viewingOffsetInches = playspace_verticalOffsetInches // Todo: not implemented yet \n        this.playspaceSizeDegrees = playspace_degreesVisualAngle\n        this.playspace_isFullScreen = playspace_isFullScreen\n        this.virtualPixelsPerInch = screen_virtualPixelsPerInch\n        this.playspaceSizePixels = this.deg2pixels(this.playspaceSizeDegrees)\n\n        var bounds = this.getPlayspaceBounds()    \n        this.ScreenDisplayer = new ScreenDisplayer(bounds)\n        \n        if (primary_reinforcer_type == 'juice'){\n            this.Reinforcer = new JuiceReinforcer(juiceRewardPer1000, pumpNumber)\n        }\n        else if(\n            primary_reinforcer_type == 'monetary' \n            || primary_reinforcer_type == 'usd'\n            || primary_reinforcer_type == 'money'\n            || primary_reinforcer_type == 'dollars'){\n            this.Reinforcer = new MonetaryReinforcer(bonusUSDPerCorrect)\n        }\n\n        this.ActionPoller = new ActionPollerClass(action_event_type, bounds)\n        this.SoundPlayer = new SoundPlayerClass()\n        this.periodicRewardIntervalMsec = periodicRewardIntervalMsec \n        this.periodicRewardAmount = periodicRewardAmount\n\n        // Async trackers \n        this.rewardLog = {'t':[], 'n':[]}\n    }\n\n    debug2record(){\n        this.rewardLog = {'t':[], 'n':[]}\n        this.start_device_tracking()\n        this.ActionPoller.start_action_tracking()\n        this.toggleBorder(0)\n        console.log('debug2record: Playspace performed a reset of reward, device, and action logs')\n    }\n\n    async build(){\n        \n        this.attachWindowResizeMonitor()\n        await this.SoundPlayer.build()\n        await this.ScreenDisplayer.build()\n        \n    }\n\n    async run_trial(trialPackage){\n\n        // ************ Prebuffer trial assets ***************\n\n        // Fixation\n        wdm('Buffering fixation...')\n        //console.log(trialPackage)\n        var fixationXCentroidPixels = this.xprop2pixels(trialPackage['fixationXCentroid'] )\n        var fixationYCentroidPixels = this.yprop2pixels(trialPackage['fixationYCentroid'] )\n        var fixationDiameterPixels = this.deg2pixels(trialPackage['fixationDiameterDegrees'] )\n\n\n        var sampleXCentroidPixels = this.xprop2pixels(trialPackage['sampleXCentroid'])\n        var sampleYCentroidPixels = this.yprop2pixels(trialPackage['sampleYCentroid'])\n        var sampleDiameterPixels = this.deg2pixels(trialPackage['sampleDiameterDegrees'])\n\n        var fixationFramePackage = {\n            'fixationXCentroidPixels':fixationXCentroidPixels,\n            'fixationYCentroidPixels':fixationYCentroidPixels, \n            'fixationDiameterPixels':fixationDiameterPixels,\n            'eyeFixationXCentroidPixels':sampleXCentroidPixels, \n            'eyeFixationYCentroidPixels':sampleYCentroidPixels, \n            'eyeFixationDiameterPixels':Math.max(this.deg2pixels(0.2),4),\n            'drawEyeFixationDot': trialPackage['drawEyeFixationDot'] || false, \n            'fixationSpacebarText': trialPackage['fixationSpacebarText'] || false,\n        }\n        \n        await this.ScreenDisplayer.bufferFixation(fixationFramePackage)\n\n        // Stimulus sequence\n        wdm('Buffering stimulus...')\n\n        var choiceXCentroidPixels = this.xprop2pixels(trialPackage['choiceXCentroid'])\n        var choiceYCentroidPixels = this.yprop2pixels(trialPackage['choiceYCentroid'])\n        var choiceDiameterPixels = this.deg2pixels(trialPackage['choiceDiameterDegrees'])\n\n        var stimulusFramePackage = {\n            'sampleImage':trialPackage['sampleImage'],\n            'sampleOn':trialPackage['sampleOnMsec'],\n            'sampleOff':trialPackage['sampleOffMsec'],\n            'sampleDiameterPixels':sampleDiameterPixels,\n            'sampleXCentroid':sampleXCentroidPixels,\n            'sampleYCentroid':sampleYCentroidPixels,\n            'choiceImage':trialPackage['choiceImage'],\n            'choiceDiameterPixels':choiceDiameterPixels,\n            'choiceXCentroid':choiceXCentroidPixels,\n            'choiceYCentroid':choiceYCentroidPixels,\n        }\n\n        await this.ScreenDisplayer.bufferStimulusSequence(stimulusFramePackage)\n\n        // *************** Run trial *************************\n\n        // SHOW BLANK\n        wdm('Running fixation...')\n        await this.ScreenDisplayer.displayBlank()\n\n        // RUN FIXATION\n        this.ActionPoller.create_action_regions(\n            fixationXCentroidPixels,\n            fixationYCentroidPixels,\n            fixationDiameterPixels)\n\n        this.ActionPoller.create_button_mappings({' ':0})\n\n        var t_fixationOn = {}\n        var fixationOutcome = {}\n        if (trialPackage['fixationDiameterDegrees'] > 0){\n            var t_fixationOn = await this.ScreenDisplayer.displayFixation()\n            var fixationOutcome = await this.ActionPoller.Promise_wait_until_active_response()    \n        }\n        \n\n        // RUN STIMULUS SEQUENCE\n        wdm('Running stimulus...')\n        var t_SequenceTimestamps = await this.ScreenDisplayer.displayStimulusSequence()\n\n        var actionXCentroidPixels = this.xprop2pixels(trialPackage['actionXCentroid'])\n        var actionYCentroidPixels = this.yprop2pixels(trialPackage['actionYCentroid'])\n        var actionDiameterPixels = this.deg2pixels(trialPackage['actionDiameterDegrees'])\n\n        this.ActionPoller.create_action_regions(\n            actionXCentroidPixels, \n            actionYCentroidPixels, \n            actionDiameterPixels)\n\n        this.ActionPoller.create_button_mappings({'f':0, 'j':1})\n\n        if(trialPackage['choiceTimeLimitMsec'] > 0){\n            var actionPromise = Promise.race([\n                                this.ActionPoller.Promise_wait_until_active_response(), \n                                this.ActionPoller.timeout(trialPackage['choiceTimeLimitMsec'])]) \n        }\n        else{\n            var actionPromise = this.ActionPoller.Promise_wait_until_active_response()\n        }\n\n        wdm('Awaiting choice...')\n        var actionOutcome = await actionPromise\n        var rewardAmount = trialPackage['choiceRewardMap'][actionOutcome['actionIndex']]\n\n        // Deliver reinforcement\n        wdm('Delivering reinforcement...')\n        if (rewardAmount > 0){\n            var t_reinforcementOn = Math.round(performance.now()*1000)/1000\n            var p_sound = this.SoundPlayer.play_sound('reward_sound')\n            var p_visual = this.ScreenDisplayer.displayReward(trialPackage['rewardTimeOutMsec'])\n            var p_primaryReinforcement = this.Reinforcer.deliver_reinforcement(rewardAmount)\n            await Promise.all([p_primaryReinforcement, p_visual]) \n            var t_reinforcementOff = Math.round(performance.now()*1000)/1000\n        }\n        if (rewardAmount <= 0){\n            var t_reinforcementOn = Math.round(performance.now()*1000)/1000\n            var p_sound = this.SoundPlayer.play_sound('punish_sound')\n            var p_visual = this.ScreenDisplayer.displayPunish(trialPackage['punishTimeOutMsec'])\n            await Promise.all([p_sound, p_visual]) \n            var t_reinforcementOff = Math.round(performance.now()*1000)/1000\n        }\n        if(rewardAmount == undefined){\n            rewardAmount = 0\n            var t_reinforcementOn = Math.round(performance.now()*1000)/1000\n            var t_reinforcementOff = Math.round(performance.now()*1000)/1000\n        }\n\n        this.rewardLog['t'].push(t_reinforcementOn)\n        this.rewardLog['n'].push(rewardAmount)\n\n        // *************** Write down trial outcome *************************\n        wdm('Writing down trial outcome...')\n        var trialOutcome = {}\n        trialOutcome['return'] = rewardAmount \n        trialOutcome['action'] = actionOutcome['actionIndex']\n        trialOutcome['responseX'] = actionOutcome['x']\n        trialOutcome['responseY'] = actionOutcome['y']\n        trialOutcome['fixationX'] = fixationOutcome['x']\n        trialOutcome['fixationY'] = fixationOutcome['y']\n        trialOutcome['timestampStart'] = fixationOutcome['timestamp']\n        trialOutcome['timestampFixationOnset'] = t_fixationOn\n        trialOutcome['timestampFixationAcquired'] = fixationOutcome['timestamp']\n        trialOutcome['timestampResponse'] = actionOutcome['timestamp']\n        trialOutcome['timestampReinforcementOn'] = t_reinforcementOn\n        trialOutcome['timestampReinforcementOff'] = t_reinforcementOff\n        trialOutcome['timestampStimulusOn'] = t_SequenceTimestamps[0]\n        trialOutcome['timestampStimulusOff'] = t_SequenceTimestamps[1]\n        trialOutcome['timestampChoiceOn'] = t_SequenceTimestamps.slice(-1)[0]\n        trialOutcome['reactionTime'] = Math.round(actionOutcome['timestamp'] - t_SequenceTimestamps.slice(-1)[0])\n\n        // todo: remove these internal references to TaskStreamer (violates modularity of main objects)\n        trialOutcome['taskNumber'] = TaskStreamer.taskNumber\n        trialOutcome['trialNumberTask'] = TaskStreamer.trialNumberTask \n        trialOutcome['trialNumberSession'] = TaskStreamer.trialNumberSession\n        trialOutcome['sampleBagProbabilities'] = TaskStreamer.bagSamplingWeights\n        trialOutcome['tStatistic'] = TaskStreamer.tStatistic \n        trialOutcome['empiricalEffectSize'] = TaskStreamer.empiricalEffectSize\n        trialOutcome['a'] = TaskStreamer.a\n        trialOutcome['b'] = TaskStreamer.b\n        trialOutcome['c'] = TaskStreamer.c\n        trialOutcome['d'] = TaskStreamer.d\n        trialOutcome['tStatistic_criticalUb'] = TaskStreamer.tStatistic_criticalUb\n        trialOutcome['tStatistic_criticalLb'] = TaskStreamer.tStatistic_criticalLb\n\n        trialOutcome['sampleBag'] = trialPackage['sampleBag']\n        trialOutcome['i_sampleBag'] = trialPackage['i_sampleBag']\n        trialOutcome['i_sampleId'] = trialPackage['i_sampleId']\n        trialOutcome['i_choiceBag'] = trialPackage['i_choiceBag']\n        trialOutcome['i_choiceId'] = trialPackage['i_choiceId']\n\n        return trialOutcome\n    }\n\n\n    toggleBorder(on_or_off){\n        this.ScreenDisplayer.togglePlayspaceBorder(on_or_off)\n    }\n\n    start_periodic_rewards(){\n        if (this.periodicRewardAmount <= 0){\n            return\n        }\n        if (this.periodicRewardIntervalMsec <= 0){\n            return\n        }\n\n        if(this.periodicRewardAmount == undefined){\n            return\n        }\n\n        if(this.periodicRewardIntervalMsec == undefined){\n            return \n        }\n\n        console.log('Called auto reinforcer:',this.periodicRewardAmount, 'reward(s) every', this.periodicRewardIntervalMsec/1000, 'seconds')\n        // https://stackoverflow.com/questions/12587977/html5-audio-chrome-on-android-doesnt-automatically-play-song-vs-chrome-on-pc-d/24842152#24842152\n        this.SoundPlayer.play_sound('reward_sound')\n        var _this = this\n        var periodic_reward = function(){\n            var t = Math.round(performance.now()*1000)/1000\n            _this.Reinforcer.deliver_reinforcement(_this.periodicRewardAmount)\n            _this.SoundPlayer.play_sound('reward_sound')\n            _this.rewardLog['n'].push(_this.periodicRewardAmount)\n            _this.rewardLog['t'].push(t)\n        } \n\n\n        window.setInterval(periodic_reward, this.periodicRewardIntervalMsec)\n        \n    }\n\n    start_action_tracking(){\n        this.ActionPoller.start_action_tracking()\n    }\n\n    get_action_log(){\n        return this.ActionPoller.actionLog\n    }\n\n    getPlayspaceBounds(){\n        var bounds = {}\n        var windowHeight = getWindowHeight()\n        var windowWidth = getWindowWidth()\n\n        if (this.playspace_isFullScreen == true){\n\n            bounds['height'] = windowHeight\n            bounds['width'] = windowWidth \n            bounds['leftBound'] = 0//Math.floor((windowWidth - min_dimension)/2) // in units of window\n            bounds['rightBound'] = windowWidth//Math.floor(windowWidth-(windowWidth - min_dimension)/2)\n            bounds['topBound'] = 0//Math.floor((windowHeight - min_dimension)/2)\n            bounds['bottomBound'] = windowHeight//Math.floor(windowHeight-(windowHeight - min_dimension)/2)\n        }\n        else{\n            var screen_margin = 0.15\n            var max_allowable_playspace_dimension = Math.round(Math.min(windowHeight, windowWidth))*(1-screen_margin)\n\n            var min_dimension = Math.min(max_allowable_playspace_dimension, this.playspaceSizePixels)\n            var min_dimension = Math.ceil(min_dimension)\n\n            bounds['height'] = min_dimension\n            bounds['width'] = min_dimension \n            bounds['leftBound'] = Math.floor((windowWidth - min_dimension)/2) // in units of window\n            bounds['rightBound'] = Math.floor(windowWidth-(windowWidth - min_dimension)/2)\n            bounds['topBound'] = Math.floor((windowHeight - min_dimension)/2)\n            bounds['bottomBound'] = Math.floor(windowHeight-(windowHeight - min_dimension)/2)\n        }\n\n        \n\n        return bounds\n    }\n\n    updateWindowLog(bounds){\n        if (this.playspaceLog == undefined){\n            this.playspaceLog = {}\n\n            for (var k in bounds){\n                if(!bounds.hasOwnProperty(k)){\n                    continue\n                }\n                this.playspaceLog[k] = []\n            }\n        }\n        for (var k in bounds){\n            if(!bounds.hasOwnProperty(k)){\n                    continue\n            }\n            if(!this.playspaceLog.hasOwnProperty(k)){\n                this.playspaceLog[k] = []\n            }\n            this.playspaceLog[k].push(bounds[k])\n        }\n    }\n    attachWindowResizeMonitor(){\n  \n        var _this = this\n        function onWindowResize(){\n          // on window resize \n            var bounds = {}\n            var windowHeight = getWindowHeight()\n            var windowWidth = getWindowWidth()\n\n            var screen_margin = 0.15\n            var max_allowable_playspace_dimension = Math.round(Math.min(windowHeight, windowWidth))*(1-screen_margin)\n\n            var min_dimension = Math.min(max_allowable_playspace_dimension, _this.playspaceSizePixels)\n            var min_dimension = Math.ceil(min_dimension)\n\n            _this.height = min_dimension\n            _this.width = min_dimension \n            _this.leftBound = Math.floor((windowWidth - _this.width)/2) // in units of window\n            _this.rightBound = Math.floor(windowWidth-(windowWidth - _this.width)/2)\n            _this.topBound = Math.floor((windowHeight - _this.height)/2)\n            _this.bottomBound = Math.floor(windowHeight-(windowHeight - _this.height)/2)\n\n            bounds['height'] = _this.height\n            bounds['width'] = _this.width\n            bounds['leftBound'] = _this.leftBound\n            bounds['rightBound'] = _this.rightBound\n            bounds['topBound'] = _this.topBound\n            bounds['bottomBound'] = _this.bottomBound\n            bounds['windowWidth'] = windowWidth\n            bounds['windowHeight'] = windowHeight\n            bounds['t'] = Math.round(performance.now()*1000)/1000\n\n            _this.ScreenDisplayer.calibrateBounds(bounds)\n            _this.ActionPoller.calibrateBounds(bounds)\n            _this.updateWindowLog(bounds) \n\n            console.log('onWindowResize():', bounds['leftBound'], bounds['topBound'])\n        }\n\n        onWindowResize()\n        \n        window.addEventListener('resize', onWindowResize)\n        console.log('Attached window resize listener')\n    }\n\n    start_device_tracking(){\n        // battery\n        // resize events\n        this.deviceLog = {}\n        \n        // ******** Battery ******** \n        // http://www.w3.org/TR/battery-status/\n\n        this.deviceLog['battery'] = {} \n        this.deviceLog['battery']['level'] = [] \n        this.deviceLog['battery']['dischargingTime'] = [] \n        this.deviceLog['battery']['timestamp'] = [] \n\n        try{\n            var _this = this\n            navigator.getBattery().then(function(batteryobj){\n                _this.deviceLog['battery']['level'].push(batteryobj.level)\n                _this.deviceLog['battery']['dischargingTime'].push(batteryobj.dischargingTime)\n                _this.deviceLog['battery']['timestamp'].push(Math.round(performance.now()*1000)/1000)\n\n                batteryobj.addEventListener('levelchange',function(){\n                    _this.deviceLog['battery']['level'].push(batteryobj.level)\n                    _this.deviceLog['battery']['dischargingTime'].push(batteryobj.dischargingTime)\n                    _this.deviceLog['battery']['timestamp'].push(Math.round(performance.now()*1000)/1000)\n                })\n              });\n        }\n        catch(error){\n            console.log('Battery logging error:', error)\n        }\n\n        // ******** Window resize ****\n        this.deviceLog['window'] = {}\n        this.deviceLog['window']['height'] = []\n        this.deviceLog['window']['width'] = []\n        this.deviceLog['window']['timestamp'] = []\n        window.addEventListener('resize', function(){\n            _this.deviceLog['window']['height'].push(getWindowHeight())\n            _this.deviceLog['window']['width'].push(getWindowWidth())\n            _this.deviceLog['window']['timestamp'].push(Math.round(performance.now()*1000)/1000)\n        })\n\n        // ******** Device and browser ****\n        this.deviceLog.devicePixelRatio = window.devicePixelRatio || 1\n        this.deviceLog.navigator_appVersion = navigator.appVersion\n        this.deviceLog.navigator_platform = navigator.platform\n        this.deviceLog.navigator_userAgent = navigator.userAgent\n        this.deviceLog.navigator_vendor = navigator.vendor\n        this.deviceLog.navigator_language = navigator.language\n        this.deviceLog.unixTimestampPageLoad = window.performance.timing.navigationStart\n        this.deviceLog.currentDate = new Date;\n        this.deviceLog.url = window.location.href\n    }\n\n    deg2inches(degrees){\n\n        // diameter degrees \n        // assume centered (center of diameter length at viewing normal to screen surface)\n        if(degrees.constructor == Array){\n            var result = []\n            for (var i = 0; i<degrees.length; i++){\n                var rad = this.deg2rad(degrees[i]/2)\n                result.push(2 * this.viewingDistanceInches * Math.atan(rad))\n            }\n            return result\n        }\n\n        var rad = this.deg2rad(degrees/2)\n        return 2 * this.viewingDistanceInches * Math.atan(rad) \n    }\n\n    deg2pixels(degrees){\n        // Return virtual pixels \n        if(degrees.constructor == Array){\n            var result = []\n            for (var i = 0; i<degrees.length; i++){\n                var inches = this.deg2inches(degrees[i])\n                result.push(Math.round(inches * this.virtualPixelsPerInch))\n            }\n            return result\n        }\n\n        var inches = this.deg2inches(degrees)\n        return Math.round(inches * this.virtualPixelsPerInch)\n    }\n\n    xprop2pixels(xproportion){\n        if(xproportion.constructor == Array){\n            var result = []\n            for (var i = 0; i<xproportion.length; i++){\n                result.push(Math.round(xproportion[i]*this.width))\n            }\n            return result\n        }\n        return Math.round(xproportion*this.width)\n    }\n\n    yprop2pixels(yproportion){\n        if(yproportion.constructor == Array){\n            var result = []\n            for (var i = 0; i<yproportion.length; i++){\n                result.push(Math.round(yproportion[i]*this.height))\n            }\n            return result\n        }\n        return Math.round(yproportion*this.height)\n    }\n\n    deg2rad(deg){\n        if(deg.constructor == Array){\n            var result = []\n            for (var i = 0; i<deg.length; i++){\n                result.push(deg[i] * Math.PI / 180)\n            }\n            return result\n        }\n        return deg * Math.PI / 180\n    }\n\n    \n    async run_tutorial_trial(tutorial_image){\n        var fixationXCentroidPixels = this.xprop2pixels(0.5)\n        var fixationYCentroidPixels = this.yprop2pixels(0.7)\n        var fixationDiameterPixels = this.deg2pixels(3)\n\n        // BUFFER FIXATION\n        var fixationFramePackage = {\n            'fixationXCentroidPixels':fixationXCentroidPixels,\n            'fixationYCentroidPixels':fixationYCentroidPixels, \n            'fixationDiameterPixels':fixationDiameterPixels,\n        }\n        await this.ScreenDisplayer.bufferFixation(fixationFramePackage)\n\n        // BUFFER STIMULUS\n        var stimulusXCentroidPixels = this.xprop2pixels(0.1 + 0.8 * Math.random())\n        var stimulusYCentroidPixels = this.yprop2pixels(0.6 * Math.random())\n        var stimulusDiameterPixels = this.deg2pixels(6)\n        \n        var stimulusCanvas = this.ScreenDisplayer.getSequenceCanvas('tutorial_sequence', 0)\n        await this.ScreenDisplayer.renderBlank(stimulusCanvas)\n        await this.ScreenDisplayer.drawImagesOnCanvas(tutorial_image, stimulusXCentroidPixels, stimulusYCentroidPixels, stimulusDiameterPixels, stimulusCanvas)\n\n        // SHOW BLANK\n        await this.ScreenDisplayer.displayBlank()\n\n        // RUN FIXATION\n        this.ActionPoller.create_action_regions(\n            fixationXCentroidPixels,\n            fixationYCentroidPixels,\n            fixationDiameterPixels)\n\n        await this.ScreenDisplayer.displayFixation()\n        await this.ActionPoller.Promise_wait_until_active_response()\n\n        // RUN STIMULUS SEQUENCE\n        await this.ScreenDisplayer.displayScreenSequence(stimulusCanvas, 0)\n\n        this.ActionPoller.create_action_regions(\n            stimulusXCentroidPixels, \n            stimulusYCentroidPixels, \n            stimulusDiameterPixels)\n\n        await this.ActionPoller.Promise_wait_until_active_response()\n        this.SoundPlayer.play_sound('reward_sound')\n    }\n}\n",
			"file": "public/mkturk_Playspace.js",
			"file_size": 22754,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 22754,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_TrialGenerator.js",
			"settings":
			{
				"buffer_size": 14393,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_utils.js",
			"settings":
			{
				"buffer_size": 10936,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "class ImageBuffer { \n\nconstructor(DIO){\n\t// future: some \"generator\" object that can take queries \n\t\n\t// Buffer: \n\tthis.DIO = DIO \n\n\tthis.cache_dict = {}; // image_path:image_actual\n\tthis.cache_members = []; // earliest image_path -> latest image_path \n\t// Todo: double buffer. Currently do not do anything.\n\tthis.num_elements_in_cache = 0; // tracking variable\n\tthis.max_buffer_size = 2400; // (for now, arbitrary) number of unique images to keep in buffer\n}\n\n// ------- Image blob getting functions ----------------------------\nasync get_by_name(filename){\n\tif(filename == 'dot'){\n\t\treturn filename\n\t}\n\tif (filename == 'dim_dot'){\n\t\treturn filename\n\t}\n\tif (filename == 'dot_f'){\n\t\treturn filename\n\t}\n\tif (filename == 'dot_j'){\n\t\treturn filename\n\t}\n\tif (filename == 'dot_space'){\n\t\treturn filename\n\t}\n\n\ttry{\n\t\t// Requested image not in buffer. Add it, then return. \n\t\tif (filename in this.cache_dict){\n\t\t\treturn this.cache_dict[filename]\n\t\t}\n\t\telse if (!(filename in this.cache_dict)){\n\t\t\tawait this.cache_these_images(filename)\n\t\t\treturn this.cache_dict[filename]\n\t\t}\n\n\t}\n\tcatch(error){\n\t\tconsole.error(\"get_by_name failed with error:\", error)\n\t}\n}\n\n// ------- Buffer-related functions --------------------------------\n// Add specific image, or list of images, to cache before moving on.\nasync remove_image_from_cache(filename){\n\n\ttry{\n\t\twindow.URL.revokeObjectURL(this.cache_dict[filename].src)\n\t\tdelete this.cache_dict[filename];\n\t}\n\tcatch(error){\n\t\tconsole.log('removal of', filename, 'failed with:', error)\n\t}\n\treturn\n}\n\nasync clear_cache(){\n\treturn\n}\n\nasync cache_these_images(imagenames){\n\t//console.log('at cache_these_images')\n\t//console.log(imagenames)\n\tvar numRequestedImages = 0\n\tvar lockedImageNames = [] // Requested imagenames that are currently in cache \n\ttry{\n\n\t\tif (typeof(imagenames) == \"string\"){\n\t\t\tvar filename = imagenames; \n\n\t\t\tif (!(filename in this.cache_dict)){\n\t\t\t\tvar image = await this.DIO.load_image(filename); \n\t\t\t\tthis.cache_dict[filename] = image; \n\t\t\t\tthis.cache_members.push(filename)\n\t\t\t\tnumRequestedImages++\n\t\t\t\t//this.num_elements_in_cache++\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlockedImageNames.push(filename)\n\t\t\t}\n\t\t}\n\n\t\t\n\t\telse if (typeof(imagenames) == \"object\"){\n\t\t\tvar requested_imagenames = []\n\t\t\tfor (var i = 0; i < imagenames.length; i ++){\n\t\t\t\tvar filename = imagenames[i]\n\t\t\t\tif(!(filename in this.cache_dict) && (requested_imagenames.indexOf(filename) == -1)){\n\t\t\t\t\trequested_imagenames.push(filename)\n\t\t\t\t}\n\t\t\t\telse if(requested_imagenames.indexOf(filename) != -1){\n\t\t\t\t\t//console.log('image already requested')\n\t\t\t\t\tcontinue \n\t\t\t\t}\n\t\t\t\telse if(filename in this.cache_dict){\n\t\t\t\t\t//console.log('image already cached')\n\t\t\t\t\tlockedImageNames.push(filename)\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar image_array = await this._loadImageArray(requested_imagenames)\n\t\t\tfor (var i = 0; i < image_array.length; i++){\n\t\t\t\tthis.cache_dict[requested_imagenames[i]] = image_array[i]; \n\t\t\t\tthis.cache_members.push(requested_imagenames[i])\n\t\t\t\tnumRequestedImages++ //this.num_elements_in_cache++; \n\t\t\t}\n\t\t}\n\n\t\t\n\t\n\t\tif(numRequestedImages > this.max_buffer_size){\n\t\t\tthis.max_buffer_size = numRequestedImages\n\t\t}\n\n\t\tthis.num_elements_in_cache += numRequestedImages\n\t\tif (this.num_elements_in_cache > this.max_buffer_size){\n\n\t\t\tconsole.log('Exceeded max buffer size: '+this.num_elements_in_cache+'/'+this.max_buffer_size)\n\t\t\t// Get delete pool \n\n\t\t\t// Remove oldest entries that are not locked \n\n\t\t\tvar overflowAmount = this.num_elements_in_cache - this.max_buffer_size\n\t\t\tvar numDeletableOldEntries = Math.max(0, this.max_buffer_size - (numRequestedImages - overflowAmount))\n\t\t\tnumDeletableOldEntries  = Math.max(Math.floor(numDeletableOldEntries/2), numRequestedImages) // Delete half of deletable\n\n\t\t\t// Iterate over first deletableOldEntries and delete the ones that are not locked\n\t\t\tvar deletePromiseArray = []\n\t\t\tvar numDeleted = 0\n\t\t\tfor (var j = 0; j<numDeletableOldEntries; j++){\n\t\t\t\tif (lockedImageNames.indexOf(this.cache_members[j]) == -1){\n\t\t\t\t\tdeletePromiseArray.push(this.remove_image_from_cache(this.cache_members[j]))\n\t\t\t\t\tnumDeleted = numDeleted+1\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tconsole.log('skipped deletion of ',j,  this.cache_members[j])\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tPromise.all(deletePromiseArray) // Not blocking\n\n\t\t\tthis.cache_members = this.cache_members.slice(numDeletableOldEntries)\n\t\t\tthis.cache_members.push(...lockedImageNames) // Push locked images to end of queue\n\t\t\tthis.num_elements_in_cache = this.num_elements_in_cache-numDeleted\n\n\n\t\t\t// todo: don't delete entries that were just requested\n\t\t}\n\n\t}\n\tcatch(error){\n\t\tconsole.error(\"cache_these_images failed with error:\", error)\n\t}\n}\n\nasync _loadImageArray(imagepathlist){\n\t\ttry{\n\t\t\tvar MAX_SIMULTANEOUS_REQUESTS = 500 // Empirically chosen based on our guess of Dropbox API's download request limit in a \"short\" amount of time.\n\t\t\tvar MAX_TOTAL_REQUESTS = 3000 // Empirically chosen\n\n\t\t\tif (imagepathlist.length > MAX_TOTAL_REQUESTS) {\n\t\t\t\tthrow \"Under the Dropbox API, cannot load more than \"+MAX_TOTAL_REQUESTS+\" images at a short time period. You have requested \"\n\t\t\t\t+imagepathlist.length+\". Consider using an image loading strategy that reduces the request rate on Dropbox.\"\n\t\t\t\treturn \n\t\t\t}\n\n\t\t\tif (imagepathlist.length > MAX_SIMULTANEOUS_REQUESTS){\n\t\t\t\tconsole.log('Chunking your '+ imagepathlist.length+' image requests into '+Math.ceil(imagepathlist.length / MAX_SIMULTANEOUS_REQUESTS)+' chunks of (up to) '+MAX_SIMULTANEOUS_REQUESTS+' each. ')\n\t\t\t\tvar image_array = []\n\n\t\t\t\tfor (var i = 0; i < Math.ceil(imagepathlist.length / MAX_SIMULTANEOUS_REQUESTS); i++){\n\n\t\t\t\t\tvar lb = i*MAX_SIMULTANEOUS_REQUESTS; \n\t\t\t\t\tvar ub = i*MAX_SIMULTANEOUS_REQUESTS + MAX_SIMULTANEOUS_REQUESTS; \n\t\t\t\t\tvar partial_pathlist = imagepathlist.slice(lb, ub);\n\n\t\t\t\t\t// var partial_image_requests = partial_pathlist.map(loadImagefromDropbox);\n\t\t\t\t\tvar partial_image_requests = []\n\t\t\t\t\tfor (var j = 0; j<partial_pathlist.length; j++){\n\t\t\t\t\t\tpartial_image_requests.push(this.DIO.load_image(partial_pathlist[j]))\n\t\t\t\t\t}\n\n\t\t\t\t\tvar partial_image_array = await Promise.all(partial_image_requests)\n\t\t\t\t\timage_array.push(... partial_image_array); \n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse { \n\t\t\t\tvar image_requests = imagepathlist.map(this.DIO.load_image); \n\t\t\t\tvar image_array = await Promise.all(image_requests)\n\t\t\t}\n\t\t\treturn image_array\n\t\t}\n\t\tcatch(err){\n\t\t\tconsole.log(err)\n\t\t}\n\n\t}\n\n}",
			"file": "public/mkturk_ImageBuffer.js",
			"file_size": 6317,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 6317,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_TaskStreamer.js",
			"settings":
			{
				"buffer_size": 7867,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk.html",
			"settings":
			{
				"buffer_size": 10731,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/juicer_tester.html",
			"settings":
			{
				"buffer_size": 7269,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 68 files for \"sleep\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n  207    // Assume failure took place in mechanical turk session (this code is irrelevant for inlab)\n  208    // Submit the error message\n  209:   await sleep(1500)\n  210  \n  211    try{\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n  214              // todo: write out to localstorage the data\n  215          }\n  216:         await sleep(1500)\n  217      }\n  218  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  362                          console.log(error)\n  363                          console.log('On retry '+retry_number)\n  364:                         sleep(backoff_time_seed * retry_number)\n  365                          //continue\n  366                      }   \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  368  \n  369  \n  370: function sleep(ms) {\n  371    return new Promise(resolve => setTimeout(resolve, ms));\n  372  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   72      // Playspace.Reinforcer.juiceRewardPer1000 = 175\n   73      // wdm('20sec')\n   74:     // await sleep(20000)\n   75      // ub = 500\n   76      // for (i = 0; i < ub; i++) {\n   77:     //   await sleep(1500)\n   78      //   Playspace.Reinforcer.deliver_reinforcement(1)\n   79      //   wdm(i + ' of ' + ub + '. juicerewardper1000=' + Playspace.Reinforcer.juiceRewardPer1000)\n\n6 matches across 5 files\n\n\nSearching 68 files for \"connect\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n   33  </div>\n   34  \n   35: <button id=\"connectble\" name=\"connectble\" >Connect to Bluetooth juicer</button>\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   33  </div>\n   34  \n   35: <button id=\"connectble\" name=\"connectble\" >Connect to Bluetooth juicer</button>\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n   11  // See https://www.chromestatus.com/features/5649871251963904 for more details.\n   12  \n   13: //----retry on disconnect\n   14  //---ble status write\n   15  //---detect multiple ble devices\n   ..\n   23    serviceUUID: 0xFFFF, // Service UUID\n   24    customserviceUUID: 0xA000,\n   25:   connectionUUID: 0xA001, // Connection status\n   26    pumpdurationUUID: 0xA002, //pump duration, 2 bytes (write, write w/o response)\n   27    pumpUUID: 0xA003, //notify pump opened by ble, 4 bytes (read,notify)\n   ..\n   31    server: [],\n   32    service: [],\n   33:   writeconnectioncharacteristic: [],\n   34    writepumpdurationcharacteristic: [],\n   35    pumpcharacteristic: [],\n   36    rfidcharacteristic: [],\n   37:   connected: false,\n   38  \n   39    ping_duration: 200,\n   40    ping_interval: 5000,\n   41:   twrite_connection: 0,\n   42    twrite_pumpduration: 0,\n   43    tnotify_pump: 0,\n   ..\n   46  }\n   47  \n   48: //==================== CONNECT BLE ====================//\n   49: function connectBLEButtonPromise(){\n   50  \n   51:   document.querySelector(\"button[name=connectble]\").addEventListener(\n   52      'touchend',findBLEDevice,false)\n   53:   document.querySelector(\"button[name=connectble]\").addEventListener(\n   54      'mouseup',findBLEDevice,false)\n   55    document.querySelector(\"button[name=noble]\").addEventListener(\n   ..\n   59  \n   60  \n   61:   document.querySelector(\"button[name=connectble]\").style.display = \"block\"\n   62:   document.querySelector(\"button[name=connectble]\").style.visibility = \"visible\"\n   63    document.querySelector(\"button[name=noble]\").style.display = \"block\"\n   64    document.querySelector(\"button[name=noble]\").style.visibility = \"visible\"\n   ..\n   76      while (true){\n   77        buttonclicked = yield buttonclicked;\n   78:       document.querySelector(\"button[name=connectble]\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n   79        document.querySelector(\"button[name=noble]\").style.display = \"none\"\n   80:       document.getElementById(\"connectusb\").style.display = \"none\"\n   81        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n   82:       wdm(\"Bluetooth connection handled...\")\n   83        resolveFunc(buttonclicked);\n   84      }\n   ..\n   98    try{\n   99      await requestBLEDevice()\n  100:     await connectBLEDeviceAndCacheCharacteristics()\n  101        waitforClick.next(1)    \n  102    }\n  103    catch(error){\n  104:     if (ble.connected == false){\n  105        var textstr = 'Error getting ble device/service/characteristic';\n  106        console.log(textstr)\n  ...\n  114  async function requestBLEDevice(){\n  115    let result = Promise.resolve()\n  116:   if (ble.connected == false){\n  117      console.log('Requesting ble device...')\n  118      wdm('Requesting bluetooth device list')\n  ...\n  129          \n  130          ble.device=device\n  131:         ble.device.addEventListener('gattserverdisconnected',onDisconnectedBLE)\n  132      }\n  133      catch(error){\n  134:       if (ble.connected == false){\n  135          var textstr = 'Still waiting for user to select device'\n  136          console.log(textstr)\n  ...\n  144  }\n  145  \n  146: // Step 2: Connect server & Cache characteristics -- returns a promise\n  147: async function connectBLEDeviceAndCacheCharacteristics(){\n  148:   console.log('Connecting to GATT Server...')\n  149  \n  150:   server = await ble.device.gatt.connect()\n  151      var textstr = \"found a GATT server\"\n  152      console.log(textstr,server)\n  ...\n  164  \n  165    characteristics = await Promise.all([\n  166:       service.getCharacteristic(ble.connectionUUID),\n  167        service.getCharacteristic(ble.pumpdurationUUID),\n  168        service.getCharacteristic(ble.pumpUUID),\n  169        service.getCharacteristic(ble.rfidUUID)])\n  170:     var textstr = \"found a connection, pump duration, pump, & rfid characteristics\"\n  171      console.log(textstr,characteristics)\n  172      ble.statustext = ble.statustext + \"<br>\" + textstr\n  173      \n  174:     ble.writeconnectioncharacteristic=characteristics[0]\n  175      ble.writepumpdurationcharacteristic=characteristics[1]\n  176      ble.pumpcharacteristic=characteristics[2]\n  ...\n  189      ble.pumpcharacteristic.addEventListener('characteristicvaluechanged',onPumpNotificationFromBLE)\n  190      ble.rfidcharacteristic.addEventListener('characteristicvaluechanged',onRFIDNotificationFromBLE)\n  191:     ble.connected = true\n  192      pingBLE()\n  193  } \n  194  \n  195  \n  196: //==================== RECONNECT BLE ====================//\n  197: // adapted from: https://googlechrome.github.io/samples/web-bluetooth/automatic-reconnect.html\n  198  \n  199: function onDisconnectedBLE(){\n  200:   ble.connected = false\n  201:   var textstr = 'BLE disconnected'\n  202    console.log(textstr)\n  203    ble.statustext = textstr\n  204  \n  205:   reconnectBLE()\n  206  }\n  207  \n  208: async function reconnectBLE(){\n  209    exponentialBackoff(100 /* max retries */, 2 /* seconds delay */,\n  210      async function toTry() {\n  211:       time('Connecting to Bluetooth Device... ');\n  212:       var textstr = 'Attempting to reconnect to BLE...'\n  213        console.log(textstr)\n  214        ble.statustext = textstr\n  215  \n  216:       await connectBLEDeviceAndCacheCharacteristics()\n  217      },\n  218      function success() {\n  219:       console.log('> Bluetooth Device reconnected. Try disconnect it now.');\n  220:       var textstr = 'Successful reconnection!'\n  221        console.log(textstr)\n  222        ble.statustext = textstr\n  223      },\n  224      function fail() {\n  225:       time('Failed to reconnect.');\n  226:       var textstr = 'Could not reconnect to Bluetooth Device after multipe tries'\n  227        console.log(textstr)\n  228        ble.statustext = textstr\n  ...\n  275  function pingBLE(){\n  276    var arrInt8 = toBytesInt16(ble.ping_duration)\n  277:   if (ble.connected == true){\n  278      console.log('Pinging BLE device')\n  279:     ble.writeconnectioncharacteristic.writeValue(arrInt8)\n  280      pingTimer = setTimeout(function(){\n  281        clearTimeout(pingTimer);\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n   35              var RewardDuration = nreward * this.setJuicerRewardDuration();\n   36  \n   37:             if (ble.connected == true){\n   38                  var p2 = writepumpdurationtoBLE(Math.round(RewardDuration*1000))\n   39                  return p2\n   40              }\n   41  \n   42:             if (port.connected == true){\n   43                  var p2 = port.writepumpdurationtoUSB(Math.round(RewardDuration*1000))\n   44                  return p2\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SoundPlayer.js:\n   42          var s = _this.audioContext.createBufferSource()\n   43          s.buffer = bufferList[i] \n   44:         s.connect(_this.audioContext.destination)\n   45          _this.soundInstances[name] == s\n   46          _this.is_buffered[name] = true\n   ..\n   76      \n   77      s.buffer = bufferEntry\n   78:     s.connect(this.audioContext.destination)\n   79      this.soundInstances[name] = s\n   80  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css:\n    1: #connectble{\n    2    z-index:101; \n    3    visibility:hidden; \n    .\n   23  }\n   24  \n   25: #connectusb{\n   26    z-index:101; \n   27    visibility:hidden; \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_usb.js:\n    1  \n    2  var port={\n    3:   statustext_connect: \"\",\n    4    statustext_sent: \"\",\n    5    statustext_received: \"\",\n    .\n    7  var serial = {}\n    8  \n    9: navigator.usb.addEventListener('disconnect', device => {\n   10:   port.connected = false\n   11:   port.statustext_connect = \"USB DEVICE DISCONNECTED\"\n   12:   console.log(port.statustext_connect)\n   13  });\n   14  \n   ..\n   17    console.log('AT FIND USB DEVICE')\n   18    // STEP 1A: Auto-Select first port\n   19:   if (event.type == \"AutoConnect\" || \n   20:     event.type == \"Reconnect\"){\n   21  //    ports = await getPorts()\n   22      //STEP 1A: GetPorts - Automatic at initialization\n   ..\n   27  \n   28      if (ports.length == 0) {\n   29:       port.statustext_connect = \"NO USB DEVICE automatically found on page load\"\n   30:       console.log(port.statustext_connect)\n   31      }\n   32      else {\n   33        var statustext = \"\"\n   34:       if (event.type == \"AutoConnect\"){\n   35:         statustext = \"AUTO-CONNECTED USB DEVICE ON PAGE LOAD!\"\n   36        }\n   37:       else if (event.type == \"Reconnect\"){\n   38:         statustext = \"RECONNECTED USB DEVICE!\"\n   39        }\n   40        port = ports[0];\n   41:       await port.connect()\n   42:       port.statustext_connect = statustext\n   43:       console.log(port.statustext_connect)\n   44      }\n   45    }\n   46  \n   47:   // STEP 1B: User connects to Port\n   48  if (event.type == \"touchend\" || event.type == \"mouseup\"){\n   49      event.preventDefault(); //prevents additional downstream call of click listener\n   ..\n   64        port = new serial.Port(device) //return port\n   65  \n   66:       await port.connect()\n   67  \n   68:         port.statustext_connect = \"USB DEVICE CONNECTED BY USER ACTION!\"\n   69      }\n   70      catch(error){\n   ..\n   82  };\n   83  \n   84: //PORT - connect\n   85: serial.Port.prototype.connect = async function(){\n   86    await this.device_.open()\n   87  \n   ..\n  101      }) //send controlTransferOut to work with channels\n  102  \n  103:   this.connected = true\n  104    readLoop(this)\n  105    // pingUSB()\n  ...\n  150  }\n  151  \n  152: //PORT - disconnect\n  153: serial.Port.prototype.disconnect = async function() {\n  154    await this.device_.controlTransferOut({\n  155        'requestType': 'class',\n  ...\n  161    this.device_.close()\n  162  \n  163:   port.statustext_connect = \"USB DEVICE DISCONNECTED\"\n  164:   console.log(port.statustext_connect)\n  165    //updateHeadsUpDisplay()\n  166  };\n  ...\n  187  \n  188  function pingUSB(){\n  189:   if (port.connected == true){\n  190      var pingdur = 100\n  191    let msgstr = \"{\" + pingdur.toString() + \"}\" // start({), end(}) characters\n  ...\n  220  \n  221  function pingUSBBYTE(){\n  222:   if (port.connected == true){\n  223  \n  224      let view = new Uint8Array(1);\n  ...\n  236  \n  237  \n  238: //==================== CONNECT USB ====================//\n  239: function connectUSBButtonPromise(){\n  240  \n  241:   document.getElementById(\"connectusb\").addEventListener(\n  242      'touchend',findUSBDevice,false)\n  243:   document.getElementById(\"connectusb\").addEventListener(\n  244      'mouseup',findUSBDevice,false)\n  245  \n  246:   document.getElementById(\"connectusb\").style.display = \"block\"\n  247:   document.getElementById(\"connectusb\").style.visibility = \"visible\"\n  248    wdm(\"Waiting for USB preferences...\")\n  249  \n  ...\n  258      while (true){\n  259        buttonclicked = yield buttonclicked;\n  260:       document.getElementById(\"connectusb\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n  261        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n  262:       wdm(\"USB connection handled...\")\n  263        resolveFunc(buttonclicked);\n  264      }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   20          'mouseup',this.doneTestingTask_listener,false)\n   21  \n   22:         connectBLEButtonPromise()\n   23:         connectUSBButtonPromise()\n   24      }\n   25  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   20  \n   21      UX = new MonkeyUX()\n   22:    wdm('Starting dropbox connection...')\n   23     DIO = new DropboxIO()\n   24     await DIO.build(window.location.href)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  197  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n  198  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  199: TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  200  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  201  \n\n/Users/michaellee/Dropbox (MIT)/ptap/docs/installing_ptap_on_tablets.md:\n   30  2. On your tablet's version of Chrome, in chrome://flags, turn on enable-command-line-on-non-rooted-devices. This will allow the tablet running Chrome to utilize command-line arguments when opened, which you will write in the enxt step.\n   31  \n   32: 3. On your workstation's terminal program, write the following command (in iTerm, on my Mac, while the tablet was connected): \n   33  adb shell 'echo --enable-features=WebUSB > /data/local/tmp/chrome-command-line'\n   34  \n\n106 matches across 11 files\n\n\nSearching 68 files for \"writepumpdurationtoBLE\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n   35  <button id=\"connectble\" name=\"connectble\" >Connect to Bluetooth juicer</button>\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37: <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38  <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   35  <button id=\"connectble\" name=\"connectble\" >Connect to Bluetooth juicer</button>\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37: <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38  <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n  253  \n  254  //============== READ NOTIFICATIONS & WRITES ==============//\n  255: async function writepumpdurationtoBLE(num){\n  256    console.log('Attempting bluetooth write')\n  257    var arrInt8 = toBytesInt16(num)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n   36  \n   37              if (ble.connected == true){\n   38:                 var p2 = writepumpdurationtoBLE(Math.round(RewardDuration*1000))\n   39                  return p2\n   40              }\n\n4 matches across 4 files\n\n\nSearching 68 files for \"connectusb\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n   78        document.querySelector(\"button[name=connectble]\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n   79        document.querySelector(\"button[name=noble]\").style.display = \"none\"\n   80:       document.getElementById(\"connectusb\").style.display = \"none\"\n   81        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n   82        wdm(\"Bluetooth connection handled...\")\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css:\n   23  }\n   24  \n   25: #connectusb{\n   26    z-index:101; \n   27    visibility:hidden; \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_usb.js:\n  237  \n  238  //==================== CONNECT USB ====================//\n  239: function connectUSBButtonPromise(){\n  240  \n  241:   document.getElementById(\"connectusb\").addEventListener(\n  242      'touchend',findUSBDevice,false)\n  243:   document.getElementById(\"connectusb\").addEventListener(\n  244      'mouseup',findUSBDevice,false)\n  245  \n  246:   document.getElementById(\"connectusb\").style.display = \"block\"\n  247:   document.getElementById(\"connectusb\").style.visibility = \"visible\"\n  248    wdm(\"Waiting for USB preferences...\")\n  249  \n  ...\n  258      while (true){\n  259        buttonclicked = yield buttonclicked;\n  260:       document.getElementById(\"connectusb\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n  261        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n  262        wdm(\"USB connection handled...\")\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   21  \n   22          connectBLEButtonPromise()\n   23:         connectUSBButtonPromise()\n   24      }\n   25  \n\n11 matches across 6 files\n\n\nSearching 68 files for \"connectusb\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n   ..\n  112  \n  113  var FLAGS = {}; // todo: get rid of\n  114: document.getElementById(\"connectusb\").setAttribute(\"visibility\",true);\n  115  \n  116  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n   36  <button id=\"noble\" name=\"noble\">No Bluetooth juicer</button>\n   37  <button id=\"drive_juice_button\" onclick=\"writepumpdurationtoBLE(500)\">Send juice signal</button>\n   38: <button id=\"connectusb\">Connect to USB juicer</button>\n   39  \n   40  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js:\n   78        document.querySelector(\"button[name=connectble]\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n   79        document.querySelector(\"button[name=noble]\").style.display = \"none\"\n   80:       document.getElementById(\"connectusb\").style.display = \"none\"\n   81        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n   82        wdm(\"Bluetooth connection handled...\")\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css:\n   23  }\n   24  \n   25: #connectusb{\n   26    z-index:101; \n   27    visibility:hidden; \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_usb.js:\n  237  \n  238  //==================== CONNECT USB ====================//\n  239: function connectUSBButtonPromise(){\n  240  \n  241:   document.getElementById(\"connectusb\").addEventListener(\n  242      'touchend',findUSBDevice,false)\n  243:   document.getElementById(\"connectusb\").addEventListener(\n  244      'mouseup',findUSBDevice,false)\n  245  \n  246:   document.getElementById(\"connectusb\").style.display = \"block\"\n  247:   document.getElementById(\"connectusb\").style.visibility = \"visible\"\n  248    wdm(\"Waiting for USB preferences...\")\n  249  \n  ...\n  258      while (true){\n  259        buttonclicked = yield buttonclicked;\n  260:       document.getElementById(\"connectusb\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n  261        document.getElementById('drive_juice_button').style.visibility = \"visible\"\n  262        wdm(\"USB connection handled...\")\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   21  \n   22          connectBLEButtonPromise()\n   23:         connectUSBButtonPromise()\n   24      }\n   25  \n\n12 matches across 6 files\n\n\nSearching 68 files for \"connectUSBButtonPromise\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_usb.js:\n  237  \n  238  //==================== CONNECT USB ====================//\n  239: function connectUSBButtonPromise(){\n  240  \n  241    document.getElementById(\"connectusb\").addEventListener(\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js:\n   21  \n   22          connectBLEButtonPromise()\n   23:         connectUSBButtonPromise()\n   24      }\n   25  \n\n2 matches across 2 files\n\n\nSearching 68 files for \"JuiceReinforcer\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n  121    //var juiceRewardPer1000 = 150\n  122    //\n  123:   //var Reinforcer = new JuiceReinforcer(juiceRewardPer1000)\n  124  \n  125    var RewardDurationMsec = 100\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n   23          \n   24          if (primary_reinforcer_type == 'juice'){\n   25:             this.Reinforcer = new JuiceReinforcer(juiceRewardPer1000)\n   26          }\n   27          else if(\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n   18  \n   19  \n   20: class JuiceReinforcer{\n   21      constructor(juiceRewardPer1000, pumpNumber){\n   22  \n\n3 matches across 3 files\n\n\nSearching 68 files for \"JuiceReinforcer\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n  121    //var juiceRewardPer1000 = 150\n  122    //\n  123:   //var Reinforcer = new JuiceReinforcer(juiceRewardPer1000)\n  124  \n  125    var RewardDurationMsec = 100\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n   23          \n   24          if (primary_reinforcer_type == 'juice'){\n   25:             this.Reinforcer = new JuiceReinforcer(juiceRewardPer1000)\n   26          }\n   27          else if(\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js:\n   18  \n   19  \n   20: class JuiceReinforcer{\n   21      constructor(juiceRewardPer1000, pumpNumber){\n   22  \n\n3 matches across 3 files\n\n\nSearching 68 files for \"PlaySpaceClass\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n    1: class PlaySpaceClass{\n    2      constructor(playspacePackage){\n    3          var playspace_isFullScreen = playspacePackage['playspace_isFullScreen']\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   43      'bonusUSDPerCorrect':ENVIRONMENT['bonusUSDPerCorrect'], \n   44      'juiceRewardPer1000Trials':ENVIRONMENT['juiceRewardPer1000Trials']}\n   45:   Playspace = new PlaySpaceClass(playspacePackage)\n   46    await Playspace.build()\n   47  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   54    \n   55      wdm('Building playspace...')\n   56:    Playspace = new PlaySpaceClass(playspacePackage)\n   57     await Playspace.build()\n   58     Playspace.toggleBorder(1)\n\n3 matches across 3 files\n\n\nSearching 68 files for \"crypto\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js:\n   18          // Unpack sessionPackage\n   19          wdm('Download_from_stringing SESSION_PACKAGE...')\n   20:         //var sessionPackageBootstrapString = '/MonkeyTurk_upstairs/Subjects/Crypto_session.json' // TODO: fix on tablet (ee issue)\n   21    \n   22          var sessionPackage = await this.download_from_string(sessionPackageBootstrapString)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  374  \n  375  function md5Hash(blob){\n  376:   var hash = CryptoJS.MD5(CryptoJS.enc.Latin1.parse(blob));\n  377    return hash\n  378  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  135  The random number sequence is the same as version 1.0 for string seeds.\n  136  * Version 2.0 changed the sequence for non-string seeds.\n  137: * Version 2.1 speeds seeding and uses window.crypto to autoseed if present.\n  138: * Version 2.2 alters non-crypto autoseeding to sweep up entropy from plugins.\n  139  * Version 2.3 adds support for \"new\", module loading, and a null seed arg.\n  140  * Version 2.3.1 adds a build environment, module packaging, and tests.\n  141  * Version 2.3.4 fixes bugs on IE8, and switches to MIT license.\n  142  * Version 2.3.6 adds a readable options object argument.\n  143: * Version 2.3.10 adds support for node.js crypto (contributed by ctd1500).\n  144  \n  145  The standard ARC4 key scheduler cycles short keys, which means that\n  ...\n  152  \n  153  When seedrandom() is called with zero args or a null seed, it uses a\n  154: seed drawn from the browser crypto object if present.  If there is no\n  155: crypto support, seedrandom() uses the current time, the native rng,\n  156  and a walk of several DOM objects to collect a few bits of entropy.\n  157  \n  ...\n  168  * seedrandom('explicit.')       - avg less than 0.2 milliseconds per call\n  169  * seedrandom('explicit.', true) - avg less than 0.2 milliseconds per call\n  170: * seedrandom() with crypto      - avg less than 0.2 milliseconds per call\n  171  \n  172: Autoseeding without crypto is somewhat slower, about 20-30 milliseconds on\n  173  a 2012 windows 7 1.5ghz i5 laptop, as seen on Firefox 19, IE 10, and Opera.\n  174  Seeded rng calls themselves are fast across these browsers, with slowest\n  ...\n  215      overflow = significance * 2,\n  216      mask = width - 1,\n  217:     nodecrypto;\n  218  \n  219  //\n  ...\n  340  //\n  341  // autoseed()\n  342: // Returns an object for autoseeding, using window.crypto if available.\n  343  //\n  344  /** @param {Uint8Array|Navigator=} seed */\n  345  function autoseed(seed) {\n  346    try {\n  347:     if (nodecrypto) return tostring(nodecrypto.randomBytes(width));\n  348:     global.crypto.getRandomValues(seed = new Uint8Array(width));\n  349      return tostring(seed);\n  350    } catch (e) {\n  ...\n  378    module.exports = impl;\n  379    try {\n  380:     // When in node.js, try using crypto package for autoseeding.\n  381:     nodecrypto = require('crypto');\n  382    } catch (ex) {}\n  383  } else if (define && define.amd) {\n  ...\n  386  \n  387  //\n  388: // Node.js native crypto support.\n  389  //\n  390  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Crypto_landing_page.html:\n   12  async function setupSession(){\n   13    \n   14:   SESSION_PACKAGE = '/MonkeyTurk_upstairs/Subjects/Crypto_session.json'\n   15:   agentID = 'Crypto'\n   16    \n   17    console.log(SESSION_PACKAGE)\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/landing_page_selector.html:\n   15      <div style = \"position: absolute; top:20%; left:50%; height:50%; display:flex; flex-direction:column; justify-content:space-around; align-items:center;\">\n   16      Select landing page:\n   17:     <button id=\"Crypto\" onclick=\"window.location='Crypto_landing_page.html';\" \n   18                              style=\"\n   19                                height: 50px; \n   ..\n   22                                background-opacity:0.5;\n   23                                color:black;\n   24:                               background-color:#75FF82FF;\">Crypto</button>\n   25      <button id=\"Zico\" onclick=\"window.location='Zico_landing_page.html';\" \n   26                          style=\"\n\n24 matches across 5 files\n\n\nSearching 68 files for \"sleep\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/juicer_tester.html:\n  128      port.writepumpdurationtoUSB(Math.round(RewardDurationMsec))\n  129      // pause \n  130:     await sleep(RewardDurationMsec + 500)\n  131      console.log('continuing')\n  132    }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html:\n  207    // Assume failure took place in mechanical turk session (this code is irrelevant for inlab)\n  208    // Submit the error message\n  209:   await sleep(1500)\n  210  \n  211    try{\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DataWriter.js:\n  214              // todo: write out to localstorage the data\n  215          }\n  216:         await sleep(1500)\n  217      }\n  218  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_DiskIO.js:\n  362                          console.log(error)\n  363                          console.log('On retry '+retry_number)\n  364:                         sleep(backoff_time_seed * retry_number)\n  365                          //continue\n  366                      }   \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js:\n  368  \n  369  \n  370: function sleep(ms) {\n  371    return new Promise(resolve => setTimeout(resolve, ms));\n  372  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   73      // Playspace.Reinforcer.juiceRewardPer1000 = 175\n   74      // wdm('20sec')\n   75:     // await sleep(20000)\n   76      // ub = 500\n   77      // for (i = 0; i < ub; i++) {\n   78:     //   await sleep(1500)\n   79      //   Playspace.Reinforcer.deliver_reinforcement(1)\n   80      //   wdm(i + ' of ' + ub + '. juicerewardper1000=' + Playspace.Reinforcer.juiceRewardPer1000)\n\n7 matches across 6 files\n\n\nSearching 68 files for \"dimDistractorButtons\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js:\n  133                  choiceId.push(... dotId)\n  134              }\n  135:             else if (tk['dimDistractorButtons'] == true){\n  136                  var dotCorrect = 'dot'\n  137                  var dotDistractor = 'dim_dot'\n\n1 match in 1 file\n\n\nSearching 68 files for \"repeatstim\"\n\n0 matches\n\nSearching 68 files for \"repeat\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_defaultHIT_failsafe.js:\n   35                  \"punishStreakTimeOutMultiplier\":1.2,\n   36                  \"rewardTimeOutMsec\":150,\n   37:                 \"probabilityRepeatWhenWrong\":0,\n   38                  \"averageReturnCriterion\":0, \n   39                  \"minTrialsCriterion\":50,\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js:\n   97          this.tStatistic_criticalLb = freturn['tStatistic_criticalLb']\n   98  \n   99:         if (tk['repeatSampleBagIfWrong'] != undefined){\n  100:             if (tk['repeatSampleBagIfWrong'] == true){\n  101                  // Indexes tk['sampleBagNames']\n  102                  if (r < 1){\n  103                      var lastBag = current_trial_outcome['sampleBag']\n  104                      var lastBagIdx = tk['sampleBagNames'].indexOf(lastBag)\n  105:                     this.bagSamplingWeights = np.xvec(tk['sampleBagNames'].length, 0) // probability = 1 of repeating last bag     \n  106                      this.bagSamplingWeights[lastBagIdx] = 1\n  107                  }\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/javascript_utils/seedrandom.js:\n  107  \n  108  var rng = new Math.seedrandom(seed); // A new prng with the same seed.\n  109: document.write(rng());               // Repeat the 'unpredictable' x.\n  110  \n  111  function reseed(event, count) {      // Define a custom entropy collector.\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n   76                  \"fixationYCentroid\": 0.8, \n   77                  \"minTrialsCriterion\": 5, \n   78:                 \"probabilityRepeatWhenWrong\": 0, \n   79                  \"punishStreakTimeOutMultiplier\": 1, \n   80                  \"punishTimeOutMsec\": 100, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n   78                          \"fixationYCentroid\": 0.8, \n   79                          \"minTrialsCriterion\": 5, \n   80:                         \"probabilityRepeatWhenWrong\": 0, \n   81                          \"punishStreakTimeOutMultiplier\": 1, \n   82                          \"punishTimeOutMsec\": 100, \n   ..\n  136                          \"fixationYCentroid\": 0.8, \n  137                          \"minTrialsCriterion\": 10, \n  138:                         \"probabilityRepeatWhenWrong\": 0, \n  139                          \"punishStreakTimeOutMultiplier\": 1, \n  140                          \"punishTimeOutMsec\": 100, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n  100                  \"fixationYCentroid\": 0.8, \n  101                  \"minTrialsCriterion\": 5, \n  102:                 \"probabilityRepeatWhenWrong\": 0, \n  103                  \"punishStreakTimeOutMultiplier\": 1.2, \n  104                  \"punishTimeOutMsec\": 400, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n  100                  \"fixationYCentroid\": 0.8, \n  101                  \"minTrialsCriterion\": 5, \n  102:                 \"probabilityRepeatWhenWrong\": 0, \n  103                  \"punishStreakTimeOutMultiplier\": 1.2, \n  104                  \"punishTimeOutMsec\": 400, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n  100                  \"fixationYCentroid\": 0.8, \n  101                  \"minTrialsCriterion\": 5, \n  102:                 \"probabilityRepeatWhenWrong\": 0, \n  103                  \"punishStreakTimeOutMultiplier\": 1.2, \n  104                  \"punishTimeOutMsec\": 400, \n  ...\n  148                  \"fixationYCentroid\": 0.8, \n  149                  \"minTrialsCriterion\": 5, \n  150:                 \"probabilityRepeatWhenWrong\": 0, \n  151                  \"punishStreakTimeOutMultiplier\": 1.2, \n  152                  \"punishTimeOutMsec\": 400, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n   95                  \"fixationYCentroid\": 0.8, \n   96                  \"minTrialsCriterion\": 5, \n   97:                 \"probabilityRepeatWhenWrong\": 0, \n   98                  \"punishStreakTimeOutMultiplier\": 1.2, \n   99                  \"punishTimeOutMsec\": 400, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n   77                          \"fixationYCentroid\": 0.8, \n   78                          \"minTrialsCriterion\": 10, \n   79:                         \"probabilityRepeatWhenWrong\": 0, \n   80                          \"punishStreakTimeOutMultiplier\": 1, \n   81                          \"punishTimeOutMsec\": 800, \n   ..\n  135                          \"fixationYCentroid\": 0.8, \n  136                          \"minTrialsCriterion\": 10, \n  137:                         \"probabilityRepeatWhenWrong\": 0, \n  138                          \"punishStreakTimeOutMultiplier\": 1, \n  139                          \"punishTimeOutMsec\": 800, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539547754_0.html:\n  214          \"fixationYCentroid\": 0.8, \n  215          \"minTrialsCriterion\": 10, \n  216:         \"probabilityRepeatWhenWrong\": 0, \n  217          \"punishStreakTimeOutMultiplier\": 1, \n  218          \"punishTimeOutMsec\": 800, \n  ...\n  272          \"fixationYCentroid\": 0.8, \n  273          \"minTrialsCriterion\": 100, \n  274:         \"probabilityRepeatWhenWrong\": 0, \n  275          \"punishStreakTimeOutMultiplier\": 1, \n  276          \"punishTimeOutMsec\": 800, \n  ...\n  326          \"fixationYCentroid\": 0.8, \n  327          \"minTrialsCriterion\": 100, \n  328:         \"probabilityRepeatWhenWrong\": 0, \n  329          \"punishStreakTimeOutMultiplier\": 1, \n  330          \"punishTimeOutMsec\": 800, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539549946_0.html:\n  214          \"fixationYCentroid\": 0.8, \n  215          \"minTrialsCriterion\": 10, \n  216:         \"probabilityRepeatWhenWrong\": 0, \n  217          \"punishStreakTimeOutMultiplier\": 1, \n  218          \"punishTimeOutMsec\": 800, \n  ...\n  272          \"fixationYCentroid\": 0.8, \n  273          \"minTrialsCriterion\": 100, \n  274:         \"probabilityRepeatWhenWrong\": 0, \n  275          \"punishStreakTimeOutMultiplier\": 1, \n  276          \"punishTimeOutMsec\": 800, \n  ...\n  326          \"fixationYCentroid\": 0.8, \n  327          \"minTrialsCriterion\": 100, \n  328:         \"probabilityRepeatWhenWrong\": 0, \n  329          \"punishStreakTimeOutMultiplier\": 1, \n  330          \"punishTimeOutMsec\": 800, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/sandbox/ptap_landing_page_1553463155_0.html:\n   77          \"fixationYCentroid\": 0.8, \n   78          \"minTrialsCriterion\": 10, \n   79:         \"probabilityRepeatWhenWrong\": 0, \n   80          \"punishStreakTimeOutMultiplier\": 1, \n   81          \"punishTimeOutMsec\": 800, \n   ..\n  139          \"keepSampleOn\": true, \n  140          \"minTrialsCriterion\": 100, \n  141:         \"probabilityRepeatWhenWrong\": 0, \n  142          \"punishStreakTimeOutMultiplier\": 1, \n  143          \"punishTimeOutMsec\": 800, \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/sandbox/test.html:\n   84          \"fixationYCentroid\": 0.8, \n   85          \"minTrialsCriterion\": 10, \n   86:         \"probabilityRepeatWhenWrong\": 0, \n   87          \"punishStreakTimeOutMultiplier\": 1, \n   88          \"punishTimeOutMsec\": 800, \n   ..\n  151          \"keepSampleOn\": true, \n  152          \"minTrialsCriterion\": 10, \n  153:         \"probabilityRepeatWhenWrong\": 0, \n  154          \"punishStreakTimeOutMultiplier\": 1, \n  155          \"punishTimeOutMsec\": 800, \n  ...\n  228          \"keepSampleOn\": true, \n  229          \"minTrialsCriterion\": 10, \n  230:         \"probabilityRepeatWhenWrong\": 0, \n  231          \"punishStreakTimeOutMultiplier\": 1, \n  232          \"punishTimeOutMsec\": 800, \n  ...\n  305          \"keepSampleOn\": true, \n  306          \"minTrialsCriterion\": 10, \n  307:         \"probabilityRepeatWhenWrong\": 0, \n  308          \"punishStreakTimeOutMultiplier\": 1, \n  309          \"punishTimeOutMsec\": 800, \n  ...\n  382          \"keepSampleOn\": true, \n  383          \"minTrialsCriterion\": 10, \n  384:         \"probabilityRepeatWhenWrong\": 0, \n  385          \"punishStreakTimeOutMultiplier\": 1, \n  386          \"punishTimeOutMsec\": 800, \n  ...\n  459          \"keepSampleOn\": true, \n  460          \"minTrialsCriterion\": 10, \n  461:         \"probabilityRepeatWhenWrong\": 0, \n  462          \"punishStreakTimeOutMultiplier\": 1, \n  463          \"punishTimeOutMsec\": 800, \n  ...\n  536          \"keepSampleOn\": true, \n  537          \"minTrialsCriterion\": 10, \n  538:         \"probabilityRepeatWhenWrong\": 0, \n  539          \"punishStreakTimeOutMultiplier\": 1, \n  540          \"punishTimeOutMsec\": 800, \n  ...\n  613          \"keepSampleOn\": true, \n  614          \"minTrialsCriterion\": 10, \n  615:         \"probabilityRepeatWhenWrong\": 0, \n  616          \"punishStreakTimeOutMultiplier\": 1, \n  617          \"punishTimeOutMsec\": 800, \n  ...\n  690          \"keepSampleOn\": true, \n  691          \"minTrialsCriterion\": 10, \n  692:         \"probabilityRepeatWhenWrong\": 0, \n  693          \"punishStreakTimeOutMultiplier\": 1, \n  694          \"punishTimeOutMsec\": 800, \n  ...\n  767          \"keepSampleOn\": true, \n  768          \"minTrialsCriterion\": 10, \n  769:         \"probabilityRepeatWhenWrong\": 0, \n  770          \"punishStreakTimeOutMultiplier\": 1, \n  771          \"punishTimeOutMsec\": 800, \n  ...\n  844          \"keepSampleOn\": true, \n  845          \"minTrialsCriterion\": 10, \n  846:         \"probabilityRepeatWhenWrong\": 0, \n  847          \"punishStreakTimeOutMultiplier\": 1, \n  848          \"punishTimeOutMsec\": 800, \n  ...\n  921          \"keepSampleOn\": true, \n  922          \"minTrialsCriterion\": 10, \n  923:         \"probabilityRepeatWhenWrong\": 0, \n  924          \"punishStreakTimeOutMultiplier\": 1, \n  925          \"punishTimeOutMsec\": 800, \n  ...\n  998          \"keepSampleOn\": true, \n  999          \"minTrialsCriterion\": 10, \n 1000:         \"probabilityRepeatWhenWrong\": 0, \n 1001          \"punishStreakTimeOutMultiplier\": 1, \n 1002          \"punishTimeOutMsec\": 800, \n ....\n 1075          \"keepSampleOn\": true, \n 1076          \"minTrialsCriterion\": 10, \n 1077:         \"probabilityRepeatWhenWrong\": 0, \n 1078          \"punishStreakTimeOutMultiplier\": 1, \n 1079          \"punishTimeOutMsec\": 800, \n ....\n 1152          \"keepSampleOn\": true, \n 1153          \"minTrialsCriterion\": 10, \n 1154:         \"probabilityRepeatWhenWrong\": 0, \n 1155          \"punishStreakTimeOutMultiplier\": 1, \n 1156          \"punishTimeOutMsec\": 800, \n ....\n 1229          \"keepSampleOn\": true, \n 1230          \"minTrialsCriterion\": 10, \n 1231:         \"probabilityRepeatWhenWrong\": 0, \n 1232          \"punishStreakTimeOutMultiplier\": 1, \n 1233          \"punishTimeOutMsec\": 800, \n ....\n 1306          \"keepSampleOn\": true, \n 1307          \"minTrialsCriterion\": 10, \n 1308:         \"probabilityRepeatWhenWrong\": 0, \n 1309          \"punishStreakTimeOutMultiplier\": 1, \n 1310          \"punishTimeOutMsec\": 800, \n ....\n 1383          \"keepSampleOn\": true, \n 1384          \"minTrialsCriterion\": 10, \n 1385:         \"probabilityRepeatWhenWrong\": 0, \n 1386          \"punishStreakTimeOutMultiplier\": 1, \n 1387          \"punishTimeOutMsec\": 800, \n ....\n 1460          \"keepSampleOn\": true, \n 1461          \"minTrialsCriterion\": 10, \n 1462:         \"probabilityRepeatWhenWrong\": 0, \n 1463          \"punishStreakTimeOutMultiplier\": 1, \n 1464          \"punishTimeOutMsec\": 800, \n ....\n 1537          \"keepSampleOn\": true, \n 1538          \"minTrialsCriterion\": 10, \n 1539:         \"probabilityRepeatWhenWrong\": 0, \n 1540          \"punishStreakTimeOutMultiplier\": 1, \n 1541          \"punishTimeOutMsec\": 800, \n ....\n 1614          \"keepSampleOn\": true, \n 1615          \"minTrialsCriterion\": 10, \n 1616:         \"probabilityRepeatWhenWrong\": 0, \n 1617          \"punishStreakTimeOutMultiplier\": 1, \n 1618          \"punishTimeOutMsec\": 800, \n\n44 matches across 14 files\n\n\nSearching 68 files for \"screen_virtualPixelsPerInch\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_defaultHIT_failsafe.js:\n   49                'playspace_verticalOffsetInches':0, \n   50                'playspace_viewingDistanceInches':8, \n   51:               'screen_virtualPixelsPerInch':143.755902965,\n   52                'primary_reinforcer_type':'juice', \n   53                'action_event_type':['mouseup', 'touchstart', 'touchmove'],\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js:\n    5          var playspace_verticalOffsetInches = playspacePackage['playspace_verticalOffsetInches']\n    6          var playspace_viewingDistanceInches = playspacePackage['playspace_viewingDistanceInches']\n    7:         var screen_virtualPixelsPerInch = playspacePackage['screen_virtualPixelsPerInch']\n    8          var primary_reinforcer_type = playspacePackage['primary_reinforcer_type'] \n    9          var action_event_type = playspacePackage['action_event_type'] \n   ..\n   17          this.playspaceSizeDegrees = playspace_degreesVisualAngle\n   18          this.playspace_isFullScreen = playspace_isFullScreen\n   19:         this.virtualPixelsPerInch = screen_virtualPixelsPerInch\n   20          this.playspaceSizePixels = this.deg2pixels(this.playspaceSizeDegrees)\n   21  \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js:\n   36      'playspace_verticalOffsetInches':ENVIRONMENT['playspace_verticalOffsetInches'],\n   37      'playspace_viewingDistanceInches':ENVIRONMENT['playspace_viewingDistanceInches'],\n   38:     'screen_virtualPixelsPerInch':ENVIRONMENT['screen_virtualPixelsPerInch'],\n   39      'primary_reinforcer_type':ENVIRONMENT['primary_reinforcer_type'], \n   40      'action_event_type':ENVIRONMENT['action_event_type'], \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js:\n   44      'playspace_verticalOffsetInches':ENVIRONMENT['playspace_verticalOffsetInches'],\n   45      'playspace_viewingDistanceInches':ENVIRONMENT['playspace_viewingDistanceInches'],\n   46:     'screen_virtualPixelsPerInch':ENVIRONMENT['screen_virtualPixelsPerInch'],\n   47      'primary_reinforcer_type':ENVIRONMENT['primary_reinforcer_type'], \n   48      'action_event_type':ENVIRONMENT['action_event_type'], \n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabMTS.html:\n   27          \"primary_reinforcer_type\": \"juice\", \n   28          \"rigEnvironment\": \"monkeybox\", \n   29:         \"screen_virtualPixelsPerInch\": 143.755902965\n   30      }, \n   31      \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR_blackdiamond.html:\n   18                    \"playspace_verticalOffsetInches\":0, \n   19                    \"playspace_viewingDistanceInches\":12, \n   20:                   \"screen_virtualPixelsPerInch\":143.755902965,\n   21                    \"primary_reinforcer_type\":\"monetary\", \n   22                    \"action_event_type\":[\"mouseup\", \"touchstart\", \"touchmove\"],\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html:\n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS.html:\n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkMTS_to_SR.html:\n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR.html:\n   28          \"primary_reinforcer_type\": \"monetary\", \n   29          \"rigEnvironment\": \"mechanicalturk\", \n   30:         \"screen_virtualPixelsPerInch\": 143.755902965\n   31      }, \n   32      \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurkSR_blackdiamond.html:\n   18                    \"playspace_verticalOffsetInches\":0, \n   19                    \"playspace_viewingDistanceInches\":12, \n   20:                   \"screen_virtualPixelsPerInch\":143.755902965,\n   21                    \"primary_reinforcer_type\":\"monetary\", \n   22                    \"action_event_type\":[\"mouseup\", \"touchstart\", \"touchmove\"],\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539547754_0.html:\n  165      \"primary_reinforcer_type\": \"monetary\", \n  166      \"rigEnvironment\": \"mechanicalturk\", \n  167:     \"screen_virtualPixelsPerInch\": 143.755902965\n  168    }, \n  169    \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/ptap_landing_page_1539549946_0.html:\n  165      \"primary_reinforcer_type\": \"monetary\", \n  166      \"rigEnvironment\": \"mechanicalturk\", \n  167:     \"screen_virtualPixelsPerInch\": 143.755902965\n  168    }, \n  169    \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/sandbox/ptap_landing_page_1553463155_0.html:\n   28      \"primary_reinforcer_type\": \"monetary\", \n   29      \"rigEnvironment\": \"mechanicalturk\", \n   30:     \"screen_virtualPixelsPerInch\": 143.755902965\n   31    }, \n   32    \"GAME_PACKAGE\": {\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/sandbox/test.html:\n   29      \"primary_reinforcer_type\": \"monetary\", \n   30      \"rigEnvironment\": \"mechanicalturk\", \n   31:     \"screen_virtualPixelsPerInch\": 143.755902965, \n   32      \"showDeviceSelectionSplash\": false\n   33    }, \n\n19 matches across 15 files\n\n\nSearching 71 files for \"sounds\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/io/mkturk_SoundPlayer.js:\n    3  \n    4        this.sound_filepaths = {\n    5:       'reward_sound':'sounds/chime.wav', // chime\n    6:       'punish_sound':'sounds/bad_doot.wav', // punish sound\n    7:       'blip':'sounds/frog.wav'}\n    8  \n    9        this.is_buffered = {'reward_sound':false, 'punish_sound':false}\n   ..\n   21      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n   22      this.soundInstances = {} // name : preloaded sound\n   23:     this.bufferedSounds = []\n   24      var _this = this\n   25      \n   ..\n   27      console.log('build soundplayer')\n   28      var finishedLoading = async function(bufferList){\n   29:       _this.bufferedSounds = bufferList \n   30        \n   31        for (var i = 0; i < bufferList.length; i++){  \n   ..\n   52      var soundRequests = [] \n   53  \n   54:     var bufferLoader = new BufferLoader(this.audioContext, ['sounds/chime.wav', 'sounds/bad_doot.wav'], finishedLoading)\n   55      await bufferLoader.load();\n   56      \n   ..\n   66  \n   67      if(name == 'reward_sound'){\n   68:       var bufferEntry = this.bufferedSounds[0] \n   69      }\n   70      else if(name == 'punish_sound'){\n   71:       var bufferEntry = this.bufferedSounds[1] \n   72      }\n   73      else{\n\n9 matches in 1 file\n\n\nSearching 71 files for \"sounds\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/io/mkturk_SoundPlayer.js:\n    3  \n    4        this.sound_filepaths = {\n    5:       'reward_sound':'resources/sounds/chime.wav', // chime\n    6:       'punish_sound':'resources/sounds/bad_doot.wav', // punish sound\n    7:       'blip':'resources/sounds/frog.wav'}\n    8  \n    9        this.is_buffered = {'reward_sound':false, 'punish_sound':false}\n   ..\n   21      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n   22      this.soundInstances = {} // name : preloaded sound\n   23:     this.bufferedSounds = []\n   24      var _this = this\n   25      \n   ..\n   27      console.log('build soundplayer')\n   28      var finishedLoading = async function(bufferList){\n   29:       _this.bufferedSounds = bufferList \n   30        \n   31        for (var i = 0; i < bufferList.length; i++){  \n   ..\n   52      var soundRequests = [] \n   53  \n   54:     var bufferLoader = new BufferLoader(this.audioContext, ['sounds/chime.wav', 'sounds/bad_doot.wav'], finishedLoading)\n   55      await bufferLoader.load();\n   56      \n   ..\n   66  \n   67      if(name == 'reward_sound'){\n   68:       var bufferEntry = this.bufferedSounds[0] \n   69      }\n   70      else if(name == 'punish_sound'){\n   71:       var bufferEntry = this.bufferedSounds[1] \n   72      }\n   73      else{\n\n9 matches in 1 file\n\n\nSearching 71 files for \"sounds\"\n\n/Users/michaellee/Dropbox (MIT)/ptap/public/io/mkturk_SoundPlayer.js:\n    3  \n    4        this.sound_filepaths = {\n    5:       'reward_sound':'resources/sounds/chime.wav', // chime\n    6:       'punish_sound':'resources/sounds/bad_doot.wav', // punish sound\n    7:       'blip':'resources/sounds/frog.wav'}\n    8  \n    9        this.is_buffered = {'reward_sound':false, 'punish_sound':false}\n   ..\n   21      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n   22      this.soundInstances = {} // name : preloaded sound\n   23:     this.bufferedSounds = []\n   24      var _this = this\n   25      \n   ..\n   27      console.log('build soundplayer')\n   28      var finishedLoading = async function(bufferList){\n   29:       _this.bufferedSounds = bufferList \n   30        \n   31        for (var i = 0; i < bufferList.length; i++){  \n   ..\n   52      var soundRequests = [] \n   53  \n   54:     var bufferLoader = new BufferLoader(this.audioContext, ['resources/sounds/chime.wav', 'resources/sounds/bad_doot.wav'], finishedLoading)\n   55      await bufferLoader.load();\n   56      \n   ..\n   66  \n   67      if(name == 'reward_sound'){\n   68:       var bufferEntry = this.bufferedSounds[0] \n   69      }\n   70      else if(name == 'punish_sound'){\n   71:       var bufferEntry = this.bufferedSounds[1] \n   72      }\n   73      else{\n\n9 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 53167,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "class SoundPlayerClass{ \n  constructor(){\n\n      this.sound_filepaths = {\n      'reward_sound':'resources/sounds/chime.wav', // chime\n      'punish_sound':'resources/sounds/bad_doot.wav', // punish sound\n      'blip':'resources/sounds/frog.wav'}\n\n      this.is_buffered = {'reward_sound':false, 'punish_sound':false}\n      this.current_sound_counter = 0\n\n      this.is_built = false\n\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/createBuffer\n\n}\n\n  async build(){\n   \n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    this.soundInstances = {} // name : preloaded sound\n    this.bufferedSounds = []\n    var _this = this\n    \n    \n    console.log('build soundplayer')\n    var finishedLoading = async function(bufferList){\n      _this.bufferedSounds = bufferList \n      \n      for (var i = 0; i < bufferList.length; i++){  \n        if (i == 0){\n          var name = 'reward_sound'\n        }\n        else if( i == 1){\n          var name = 'punish_sound'\n        }\n        else{\n          continue\n        }\n\n        var s = _this.audioContext.createBufferSource()\n        s.buffer = bufferList[i] \n        s.connect(_this.audioContext.destination)\n        _this.soundInstances[name] == s\n        _this.is_buffered[name] = true\n      }\n\n      return \n    }\n\n    var soundRequests = [] \n\n    var bufferLoader = new BufferLoader(this.audioContext, ['resources/sounds/chime.wav', 'resources/sounds/bad_doot.wav'], finishedLoading)\n    await bufferLoader.load();\n    \n    this.is_built = true\n\n    return \n\n  }\n\n  async buffer_sound(name){\n\n    var s = this.audioContext.createBufferSource()\n\n    if(name == 'reward_sound'){\n      var bufferEntry = this.bufferedSounds[0] \n    }\n    else if(name == 'punish_sound'){\n      var bufferEntry = this.bufferedSounds[1] \n    }\n    else{\n      return \n    }\n    \n    s.buffer = bufferEntry\n    s.connect(this.audioContext.destination)\n    this.soundInstances[name] = s\n\n  }\n\n  async play_sound(name){\n\n    if(this.is_built == false){\n      await this.build()\n    }\n    if(this.soundInstances[name] == undefined){\n      this.buffer_sound(name)\n    }\n    if(this.is_buffered[name] == false){\n      this.buffer_sound(name)\n    }\n    this.soundInstances[name].start()\n    this.is_buffered[name] = false\n    this.buffer_sound(name) // Load up for next call\n    \n  }\n}\n\n\n// Source: https://www.html5rocks.com/en/tutorials/webaudio/intro/js/buffer-loader.js\nfunction BufferLoader(context, urlList, callback) {\n  this.context = context;\n  this.urlList = urlList;\n  this.onload = callback;\n  this.bufferList = new Array();\n  this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(url, index) {\n  // Load buffer asynchronously\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url, true);\n  request.responseType = \"arraybuffer\";\n\n  var loader = this;\n\n  request.onload = function() {\n    // Asynchronously decode the audio file data in request.response\n    loader.context.decodeAudioData(\n      request.response,\n      function(buffer) {\n        if (!buffer) {\n          alert('error decoding file data: ' + url);\n          return;\n        }\n        loader.bufferList[index] = buffer;\n        if (++loader.loadCount == loader.urlList.length)\n          loader.onload(loader.bufferList);\n      },\n      function(error) {\n        console.error('decodeAudioData error', error);\n      }\n    );\n  }\n\n  request.onerror = function() {\n    alert('BufferLoader: XHR error');\n  }\n\n  request.send();\n}\n\nBufferLoader.prototype.load = function() {\n  for (var i = 0; i < this.urlList.length; ++i)\n  this.loadBuffer(this.urlList[i], i);\n}\n\n\n",
			"file": "public/io/mkturk_SoundPlayer.js",
			"file_size": 3587,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 3637,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_style.css",
			"settings":
			{
				"buffer_size": 6667,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Functions for delivering primary reinforcement\n\nclass MonetaryReinforcer{\n    constructor(bonus_usd_per_correct){\n        this.bonus_total = 0\n        this.bonus_per_correct = bonus_usd_per_correct || 0.0007 // one extra dollar for every 1000 correct \n    }\n\n    async deliver_reinforcement(nreward){\n\n        if(nreward >=1){\n            this.bonus_total = this.bonus_total + this.bonus_per_correct\n            console.log('Running monetary bonus amount',\n              Math.round(this.bonus_total*1000)/1000)\n          }\n    }       \n}\n\n\nclass JuiceReinforcer{\n    constructor(juiceRewardPer1000, pumpNumber){\n\n      if (juiceRewardPer1000 != undefined){\n        this.juiceRewardPer1000 = juiceRewardPer1000  \n      }\n      else{\n        this.juiceRewardPer1000 = 300\n      }\n\n      if (pumpNumber != undefined){\n        this.pumpNumber = pumpNumber\n      }\n      else{\n        this.pumpNumber = 1\n      }\n      \n    }\n\n    async deliver_reinforcement(nreward){\n\n        if(nreward >=1){\n\n            var RewardDuration = nreward * this.setJuicerRewardDuration(); // msec\n\n            if (ble.connected == true){\n                var p2 = writepumpdurationtoBLE(Math.round(RewardDuration))\n                return p2\n            }\n\n            if (port.connected == true){\n                var p2 = port.writepumpdurationtoUSB(Math.round(RewardDuration))\n                return p2\n            }\n        }\n      \n        console.log('Delivered ', nreward, 'rewards')\n    }\n\n    setJuicerRewardDuration(){\n      var m = 0;\n      var b = 0;\n\n      var pumpNumber = this.pumpNumber\n      //var liquidNumber = 1\n      var rewardPer1000 = this.juiceRewardPer1000 \n      if (pumpNumber == 1){\n        // m = 1.13; b = 15.04;\n        m = 0.99; b = 14.78;\n      } //peristaltic (adafruit)\n      else if (pumpNumber == 2){\n        // m = 3.20; b = -15.47;\n        m = 1.40; b = -58.77;\n      } //submersible (tcs)\n      else if (pumpNumber == 3){\n        // m = 0.80; b = -3.00;\n        m=0.91; b = -15;\n      } //diaphragm (tcs)\n      else if (pumpNumber == 4){\n        m = 0.0531; b=-1.2594;\n      } //piezoelectric (takasago)\n      else if (pumpNumber == 5){\n        m = 2.4463; b=53.6418;\n      } //new diaphragm (tcs)\n      else if (pumpNumber == 6){\n        if (liquidNumber==1 || liquidNumber==3){\n          m=0.1251; b=-0.0833; //1=water 2=water-condensed milk 3=marshmallow slurry (4/30mL)\n        }\n        else if (liquidNumber==2){\n          m=0.0550; b=0.6951; //water-condensed milk (50/50)\n        }\n      } //piezoelectric 7mL/min (takasago)\n      else if (pumpNumber == 7){\n        //Yosoo 6V DC DIY Dosing pump Peristaltic dosing Head\n        m = 1.08 // mL per second\n        b = 0.03 // extraneous mL per trigger\n      }\n      return (rewardPer1000 - b)/m; // in msec\n      \n    }\n}",
			"file": "public/mkturk_Reinforcer.js",
			"file_size": 2794,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 2794,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nvar port={\n  statustext_connect: \"\",\n  statustext_sent: \"\",\n  statustext_received: \"\",\n}\nvar serial = {}\n\nnavigator.usb.addEventListener('disconnect', device => {\n  port.connected = false\n  port.statustext_connect = \"USB DEVICE DISCONNECTED\"\n  console.log(port.statustext_connect)\n});\n\n// STEP 0: Port Initialization - Open (instantiate) port before assigning callbacks to it\nasync function findUSBDevice(event){\n  console.log('AT FIND USB DEVICE')\n  // STEP 1A: Auto-Select first port\n  if (event.type == \"AutoConnect\" || \n    event.type == \"Reconnect\"){\n//    ports = await getPorts()\n    //STEP 1A: GetPorts - Automatic at initialization\n    // -Enumerate all attached devices\n    // -Check for permission based on vendorID & productID\n    devices = await navigator.usb.getDevices()\n    ports = devices.map(device => new serial.Port(device)); //return port\n\n    if (ports.length == 0) {\n      port.statustext_connect = \"NO USB DEVICE automatically found on page load\"\n      console.log(port.statustext_connect)\n    }\n    else {\n      var statustext = \"\"\n      if (event.type == \"AutoConnect\"){\n        statustext = \"AUTO-CONNECTED USB DEVICE ON PAGE LOAD!\"\n      }\n      else if (event.type == \"Reconnect\"){\n        statustext = \"RECONNECTED USB DEVICE!\"\n      }\n      port = ports[0];\n      await port.connect()\n      port.statustext_connect = statustext\n      console.log(port.statustext_connect)\n    }\n  }\n\n  // STEP 1B: User connects to Port\nif (event.type == \"touchend\" || event.type == \"mouseup\"){\n    event.preventDefault(); //prevents additional downstream call of click listener\n    try{\n      //STEP 1B: RequestPorts - User based\n      // -Get device list based on Arduino filter\n      // -Look for user activation to select device\n      const filters = [\n        { 'vendorId': 0x2341, 'productId': 0x8036 },\n        { 'vendorId': 0x2341, 'productId': 0x8037 },\n        { 'vendorId': 0x2341, 'productId': 0x804d },\n        { 'vendorId': 0x2341, 'productId': 0x804e },\n        { 'vendorId': 0x2341, 'productId': 0x804f },\n        { 'vendorId': 0x2341, 'productId': 0x8050 },\n      ];\n\n      device = await navigator.usb.requestDevice({ 'filters': filters })\n      port = new serial.Port(device) //return port\n\n      await port.connect()\n\n        port.statustext_connect = \"USB DEVICE CONNECTED BY USER ACTION!\"\n    }\n    catch(error){\n      console.log(error);\n    }\n    waitforClickUSB.next(1)\n  }\n}\n\n//============= SERIAL OBJECT =====================//\n\n//PORT - attach device(s)\nserial.Port = function(device) {\n  this.device_ = device;\n};\n\n//PORT - connect\nserial.Port.prototype.connect = async function(){\n  await this.device_.open()\n\n  if (this.device_.configuration === null)\n  {\n    return this.device_.selectConfiguration(1);\n  }\n\n  await this.device_.claimInterface(2)\n  await this.device_.selectAlternateInterface(2,0)\n  await this.device_.controlTransferOut({\n      'requestType': 'class',\n      'recipient': 'interface',\n      'request': 0x22, //vendor-specific request (i.e. enable channels)\n      'value': 0x01, //requested channels\n      'index': 0x02 //interface 2 is the recipient\n    }) //send controlTransferOut to work with channels\n\n  this.connected = true\n  readLoop(this)\n  // pingUSB()\n}\n\n//PORT  - onReceive\nserial.Port.prototype.onReceive = data => {\n  let textDecoder = new TextDecoder();\n  // console.log('Serial roundtrip write->read' + serial.dt[serial.dt.length-1])\n\n  port.statustext_received = \"RECEIVED CHAR <-- USB: \" + textDecoder.decode(data)\n  console.log(port.statustext_received)\n // updateHeadsUpDisplay()\n\n  var tagstart = port.statustext_received.indexOf('{tag',0);\n  if (tagstart > 0){\n    var tagend = port.statustext_received.indexOf('}',0);\n    TRIAL.RFIDTime[TRIAL.NRFID] = Math.round(performance.now());\n    TRIAL.RFIDTrial[TRIAL.NRFID] = CURRTRIAL.num\n    TRIAL.RFIDTag[TRIAL.NRFID] = port.statustext_received.slice(tagstart+4,tagend);\n    TRIAL.NRFID = TRIAL.NRFID+1;\n\n    if (TRIAL.NRFID >= 2){\n      var dt = TRIAL.RFIDTime[TRIAL.NRFID-1] - TRIAL.RFIDTime[TRIAL.NRFID-2]\n    }\n    port.statustext_received = 'ParsedTAG ' + TRIAL.RFIDTag[TRIAL.NRFID-1] + \n                  ' @' + new Date().toLocaleTimeString(\"en-US\") + \n                  ' dt=' + dt + 'ms'\n    console.log(port.statustext_received)\n    //updateHeadsUpDisplay()\n  }\n}\n\nserial.Port.prototype.onReceiveError = error => {\n  console.log(error);\n};\n\n//PORT - transferOut\nserial.Port.prototype.writepumpdurationtoUSB = async function(data){\n  wdm(data)\n  let msgstr = \"{\" + data.toString() + \"}\" // start(<), end(>) characters\n  let textEncoder = new TextEncoder();\n  await this.device_.transferOut(4, textEncoder.encode(msgstr));\n\n  port.statustext_sent = \"TRANSFERRED CHAR --> USB:\" + msgstr\n  console.log(port.statustext_sent)\n // updateHeadsUpDisplay()\n}\n\n//PORT - disconnect\nserial.Port.prototype.disconnect = async function() {\n  await this.device_.controlTransferOut({\n      'requestType': 'class',\n      'recipient': 'interface',\n      'request': 0x22,\n      'value': 0x00,\n      'index': 0x02\n    })\n  this.device_.close()\n\n  port.statustext_connect = \"USB DEVICE DISCONNECTED\"\n  console.log(port.statustext_connect)\n  //updateHeadsUpDisplay()\n};\n\n\n//PORT - readloop\nasync function readLoop(port){\n  try{\n    let result = await port.device_.transferIn(5, 128) //(endpoint#,length)->requesting a 64 byte buffer\n    // serial.tread=performance.now()\n    // serial.dt.push(performance.now()-serial.treadOld); //-serial.twrite)\n    // serial.treadOld=performance.now()\n    // var textstr = 'Serial roundtrip write->read << ' +\n    //           Math.round(serial.tread - serial.twrite) + 'ms'\n    // console.log(textstr)\n    port.onReceive(result.data) //calls TextDecoder to parse data\n    // slider_callback()\n    readLoop(port)\n  }\n  catch(error){\n    port.onReceiveError(error);\n  }\n}\n\nfunction pingUSB(){\n  if (port.connected == true){\n    var pingdur = 100\n  let msgstr = \"{\" + pingdur.toString() + \"}\" // start({), end(}) characters\n  let textEncoder = new TextEncoder();\n  port.device_.transferOut(4, textEncoder.encode(msgstr))\n\n  port.statustext_sent = \"PINGING! TRANSFERRED CHAR --> USB:\" + msgstr\n  console.log(port.statustext_sent)\n  //updateHeadsUpDisplay()\n\n    pingTimer = setTimeout(function(){\n      clearTimeout(pingTimer)\n      pingUSB()\n    },5000)\n  }\n}\n\n//____________________LEGACY________________________\n\n//PORT - send pump duration to arduino\nserial.Port.prototype.writepumpdurationtoUSBBYTE = async function(data) {\n  serial.twrite_pumpduration=performance.now()\n  let view = new Uint16Array(1);\n  view[0] = parseInt(data,10);\n  view[0] = parseInt(\"5000\",10);\n  await this.device_.transferOut(4, view);\n\n  port.statustext_sent = \"TRANSFERRED BYTE --> USB:\" + view\n  console.log(port.statustext_sent)\n  //updateHeadsUpDisplay()\n};\n\nfunction pingUSBBYTE(){\n  if (port.connected == true){\n\n    let view = new Uint8Array(1);\n    view[0] = parseInt(\"200\",10);\n    port.device_.transferOut(4,view)\n\n    pingTimer = setTimeout(function(){\n      clearTimeout(pingTimer)\n      pingUSB()\n    },3000)\n  }\n}\n\n\n\n\n//==================== CONNECT USB ====================//\nfunction connectUSBButtonPromise(){\n\n  document.getElementById(\"connectusb\").addEventListener(\n    'touchend',findUSBDevice,false)\n  document.getElementById(\"connectusb\").addEventListener(\n    'mouseup',findUSBDevice,false)\n\n  document.getElementById(\"connectusb\").style.display = \"block\"\n  document.getElementById(\"connectusb\").style.visibility = \"visible\"\n  wdm(\"Waiting for USB preferences...\")\n\n  var resolveFunc\n  var errFunc\n  p = new Promise(function(resolve,reject){\n    resolveFunc = resolve;\n    errFunc = reject;\n  }).then(function(resolveval){console.log('User clicked ' + resolveval)});\n  function *waitforclickGeneratorUSB(){\n    var buttonclicked =[-1];\n    while (true){\n      buttonclicked = yield buttonclicked;\n      document.getElementById(\"connectusb\").style.display = \"none\" //if do style.visibility=hidden, element will still occupy space\n      document.getElementById('drive_juice_button').style.visibility = \"visible\"\n      wdm(\"USB connection handled...\")\n      resolveFunc(buttonclicked);\n    }\n  }\n  waitforClickUSB = waitforclickGeneratorUSB(); // start async function\n  waitforClickUSB.next(); //move out of default state\n  return p;\n}\n",
			"file": "public/mkturk_usb.js",
			"file_size": 8286,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 8286,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/task_specification.json",
			"settings":
			{
				"buffer_size": 2238,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/setup_MechanicalTurk_session.js",
			"settings":
			{
				"buffer_size": 4218,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_UX.js",
			"settings":
			{
				"buffer_size": 9333,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_BiasDetection.js",
			"settings":
			{
				"buffer_size": 6631,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/mkturk_SessionBootStrapper.js",
			"settings":
			{
				"buffer_size": 7799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/setup_upstairs_session.js",
			"settings":
			{
				"buffer_size": 3330,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "class CheckPointerClass{\n    constructor(gamePackage){\n        this.gamePackage = gamePackage\n\n    }\n\n    generate_hash(){\n        var hash = JSON.stringify(this.gamePackage)\n        hash = hash.hashCode()\n        return hash\n    }\n}\n\nclass DropboxCheckPointer extends CheckPointerClass{ \n\nconstructor(DIO, agentId, gamePackage){\n    super(gamePackage)\n\n    this.DIO = DIO\n    this.agentId = agentId\n    this.saveTimeoutMsec = 5000 \n    this.debugMode = true\n}\n\nasync build(){\n    this.checkpointSavePath = join([INSTALL_SETTINGS.checkpointDirPath, 'Checkpoint_'+this.agentId+'.ckpt'])\n    this.debugCheckpointSavePath = join([INSTALL_SETTINGS.debugCheckpointDirPath, 'debug_Checkpoint_'+this.agentId+'.ckpt'])\n\n    var exists = await DIO.exists(this.checkpointSavePath)\n    if(exists == true){\n        try{\n            var checkpoint = await DIO.read_textfile(this.checkpointSavePath) \n            var checkpoint = JSON.parse(checkpoint)\n            var checkpoint = this.verify_checkpoint(checkpoint)\n        }\n        catch(error){\n            console.log(error)\n            var checkpoint = this.generate_default_checkpoint()\n        }\n    }\n    else{\n        console.log('Could not find checkpoint on disk. Creating default...')\n        var checkpoint = this.generate_default_checkpoint()\n    }\n\n    this.checkpoint = checkpoint\n    this.lastCheckpointSave = performance.now()\n    this.checkpointOnLoad = JSON.parse(JSON.stringify(checkpoint))\n\n    this.save_checkpoint()\n\n    // Start writing out periodically\n}\n\ndebug2record(){\n    this.debugMode = false\n    this.checkpoint = this.checkpointOnLoad\n    console.log('debug2record: CheckPointer reverted to checkpoint on load.')\n}\n\nverify_checkpoint(checkpoint){\n    var verified = true \n    var checkpointTemplate = this.generate_default_checkpoint()\n\n    for (var k in checkpointTemplate){\n        if(!checkpointTemplate.hasOwnProperty(k)){\n            continue\n        }\n        if (checkpoint[k] == undefined){\n            verified = false\n        }\n    }\n    if(checkpoint['gameHash'] != this.generate_hash()){\n        verified = false\n    }\n\n    if(verified == false){\n        console.log('Current game does not match checkpoint. Generating default... ')\n        checkpoint = this.generate_default_checkpoint()\n    }\n\n    return checkpoint\n}\n\ngenerate_default_checkpoint(){\n    var checkpoint = {}\n    checkpoint['agentId'] = this.agentId\n    checkpoint['gameHash'] = this.generate_hash()\n    checkpoint['taskNumber'] = 0 \n    checkpoint['trialNumberTask'] = 0\n    checkpoint['taskReturnHistory'] = []\n    checkpoint['taskActionHistory'] = []\n    checkpoint['taskBagHistory'] = []\n    \n    return checkpoint\n}\n\nupdate(checkpointPackage){\n\n    if (this.checkpoint['taskNumber'] != checkpointPackage['taskNumber']){\n        this.checkpoint['taskReturnHistory'] = []\n        this.checkpoint['taskActionHistory'] = []\n        console.log('CheckPointer noted subject moved to new task, ', checkpointPackage['taskNumber'])\n    }\n    this.checkpoint['taskNumber'] = checkpointPackage['taskNumber']\n    this.checkpoint['trialNumberTask'] = checkpointPackage['trialNumberTask']\n    this.checkpoint['taskReturnHistory'].push(checkpointPackage['return'])\n    this.checkpoint['taskActionHistory'].push(checkpointPackage['action'])\n    this.checkpoint['taskBagHistory'].push(checkpointPackage['i_sampleBag'])\n\n \n}\n\nasync save_checkpoint(){\n    this.checkpoint['lastSaveUnixTimestamp'] = (window.performance.timing.navigationStart + performance.now())/1000\n    var checkpointString = JSON.stringify(this.checkpoint, null, 2)\n\n    if(this.debugMode == true){\n        var savePath = this.debugCheckpointSavePath\n    }\n    else{\n        var savePath = this.checkpointSavePath\n    }\n    await this.DIO.write_string(checkpointString, savePath)\n    console.log('Saved checkpoint at', savePath, 'of size', memorySizeOf(checkpointString, 1))\n}\n\nasync request_checkpoint_save(){\n\n    if(performance.now() - this.lastCheckpointSave >= this.saveTimeoutMsec){\n        await this.save_checkpoint()\n        this.lastCheckpointSave = performance.now()\n    }\n}\n\n\nget_task_number(){\n  return this.checkpoint['taskNumber']\n}\n\nget_trial_number_task(){\n  return this.checkpoint['trialNumberTask']\n}\n\nget_task_return_history(){\n  return this.checkpoint['taskReturnHistory']\n}\nget_task_action_history(){\n  return this.checkpoint['taskActionHistory']\n}\nget_task_bag_history(){\n    return this.checkpoint['taskBagHistory']\n}\n\n\n}\n\n\n\nclass MechanicalTurkCheckPointer extends CheckPointerClass{ \n\n    constructor(gamePackage){\n        super(gamePackage)\n\n    }\n\n    async build(){\n    }\n\n    debug2record(){\n    }\n\n\n    update(checkpointPackage){\n    }\n\n\n    async request_checkpoint_save(){\n        return\n    }\n\n\n    get_task_number(){\n      return 0\n    }\n\n    get_trial_number_task(){\n      return 0\n    }\n\n    get_task_return_history(){\n      return []\n    }\n    get_task_action_history(){\n      return []\n    }\n    get_samples_seen_history(){\n        return {}\n    }\n\n    get_task_bag_history(){\n        return []\n    }\n}\n\n\n\n",
			"file": "public/mkturk_CheckPointer.js",
			"file_size": 5051,
			"file_write_time": 132014672500000000,
			"settings":
			{
				"buffer_size": 5051,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "public/landing_pages/inlab/landing_page_selector.html",
			"settings":
			{
				"buffer_size": 1841,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "docs/installing_ptap_on_tablets.md",
			"settings":
			{
				"buffer_size": 4726,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: c",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/michaellee/Dropbox (MIT)/ptap/public",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab"
	],
	"file_history":
	[
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Desimone1_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_UX.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_usb.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_bluetooth.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ScreenDisplayer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_ActionPoller.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_SessionBootStrapper.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TaskStreamer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/landing_page_template_dynamic.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_TrialGenerator.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Playspace.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Reinforcer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_MechanicalTurk_MTS_choicespace.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/landing_page_selector.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_session.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_style.css",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_session.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/landingPage_InlabSR.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_BiasDetection.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/unit_tests.js",
		"/Users/michaellee/.ipython/profile_default/startup/mil_standard_imports.ipy",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Zico_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/inlab/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_window.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/InlabMTS_fromurl.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/Inlab_SR_bootstrap_from_dropbox.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/InlabMTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/inlabSR.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/examples/MechanicalTurk_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_pages/template_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/behaviorParsers/unpack_data.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/MechanicalTurk_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/template_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/Inlab_SR_bootstrap_from_dropbox.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_pages/examples/Inlab_MTS.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/landing_page_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_page_templates/landing_page_template_mechanicalturker.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Zico_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/landing_page_templates/landing_page_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Turkboy_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/Turker_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_amazon_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_verify_inputs.js",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk_upstairs/GameResources/Games/6_Mutator.json",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk_upstairs/GameResources/Game/6_MutatorSRTraining.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_input_schema.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_scratch.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_tutorial.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_game.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_game.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_MechanicalTurk_task.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_upstairs_task.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_Artist.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_AssetFetcher.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_canvas_business.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_artist.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_globalvariables.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_CheckPointer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/manual_setup.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_reinforcement.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_data_writer.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_runtrial.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_rewardmap.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/mkturk_setup.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot.html",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_utils.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_plotter.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_globals.js",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/liveplot_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/SRbehavior.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/docs/taskdefinition_format.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/MTSbehavior.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/SRmetrics.json",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/Transfer_MTS_SR/dataformat/MTShistory_format.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/upload_ptap_to_upstairs.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/upload_landingpages_to_upstairs.py",
		"/Users/michaellee/Dropbox (MIT)/ptap/example/Michaelo_landing_page.html",
		"/Users/michaellee/Dropbox (MIT)/MIT_Projects/FewShot/fewshot_behavioraldataformat.json",
		"/Users/michaellee/Dropbox (MIT)/ptap/public/setup_Ratan_task.js",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/README.md",
		"/Users/michaellee/Dropbox (MIT)/ModelTurk/Generator/Generator.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/hellodropbox.html",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_learned_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_novel_and_unrelated_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/MechanicalTurk_ExperimentDefinitions/misc_resources/Zico_novel_object_pool.json",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot.html",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/StartTurkMonitor.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/sandbox_publish.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/write_landing_html.py",
		"/Users/michaellee/Dropbox (MIT)/TurkMonitor/upload_mkturk_to_sandbox.py",
		"/Users/michaellee/Dropbox (MIT)/DiCarloLab/ccn_notes_2017",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/seedrandom.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/deprecated/_deprecated_snippets.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/TabletTask_utils.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/monkeyturk_setup.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk.html",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_v2.html",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/_deprecated_snippets.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_screenfunctions.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_dropbox.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/experiment_flow.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturk_automator.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_utils.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/liveplot_googlecharts.js",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/mkturkmanifest.json",
		"/Users/michaellee/Dropbox (MIT)/mkturk/public/readme.md",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot.html",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot_utils.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/liveplot_googlecharts.js",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Subjects/SubjectCheckpoints/Michaelo_checkpoint.txt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Subjects/SubjectCheckpoints/Checkpoint_Michaelo.ckpt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Tasks/SubjectSettings/Michaelo_settings.txt",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/Tasks/SubjectParameters/Zico_params.txt",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_dropbox.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_hardware.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_utils.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_TrialQueue.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_installsettings.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_eventlisteners.js",
		"/Users/michaellee/Dropbox (MIT)/Apps/MonkeyTurk_mil_app/test.txt",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_automator.js",
		"/Users/michaellee/dicarlo5/public_html/MonkeyTurk/mkturk/public/mkturk_bluetooth.js",
		"/Users/michaellee/Dropbox (MIT)/MonkeyTurk/parameterfiles/subjects/Zico_params.txt",
		"/Users/michaellee/Dropbox (MIT)/PrimatePsychophysics/BehavioralComparisons.py"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sounds",
			"playspace_isFullScreen",
			"playspace_degreesVisualAngle",
			"virtualPixelsPerInch",
			"screen_virtualPixelsPerInch",
			"repeat",
			"repeatstim",
			"dimDistractorButtons",
			"sleep",
			"crypto",
			"PlaySpaceClass",
			"JuiceReinforcer",
			"connectUSBButtonPromise",
			"connectusb",
			"writepumpdurationtoBLE",
			"connect",
			"sleep",
			"JuiceReinforcer",
			"reinforcer.",
			"juiceRewardPer1000",
			"juicereinforcer",
			"reinforcer",
			"findUSBDevice",
			"writepumpdurationtoUSB",
			"reinforcer",
			"setup",
			"for",
			"get_sampling_weights",
			"get_trial",
			"device_selection",
			"splash",
			"fixationSpacebarText",
			"drawDotWithText",
			"run_trial",
			"bufferFixation",
			"fixation",
			"drawDotWithText",
			"instructionsDialogueString",
			"instructions",
			"create_button_mappings",
			"keypress",
			"handleKeyPressEvent",
			"key2actionIndex",
			"supportedEventTypes",
			"create_button_mappings",
			"key2actionIndex",
			"tp",
			"sampleBag",
			"repeatSampleBagIfWrong",
			"bag2idx",
			"get_image_idx",
			"trialPackage",
			"i_sampleBag",
			"current_trial_outcome",
			"repeatSampleBagIfWrong",
			"i_sampleBag",
			"trialoutcome",
			"update_state",
			"update_staet",
			"get_sampling_weights",
			"get_trial",
			"bagSamplingWeights",
			"get_sampling_weights",
			"var a",
			"a = ",
			"drawDot",
			"dot",
			"drawDot",
			"'dot'",
			"choiceXCentroid",
			"handleActionEvent",
			"recordActionEvent",
			"trackNullActions",
			"screen_margin",
			"PlaySpaceClass",
			"playspaceSizePixels",
			"deg2pixels",
			"playspaceSizeDegrees",
			"playspace_degreesVisualAngle",
			"...",
			"trialpackage",
			"choice",
			"displaystimulus",
			"upstairs",
			"ptap",
			"recordTouchEvent",
			"trackNullActions",
			"onfinish",
			"recordTouchEVent",
			"handleTouchEvent",
			"handleactionevent",
			"trackNullActions",
			"recordActionEvent",
			"loggingActions",
			"start_action_tracking",
			"loggingActions",
			"trackNullActions",
			"recordTouchEvent",
			"this.record",
			"_resolveFunc",
			"this.listening",
			"attached",
			"start_action_tracking",
			"loggingActions",
			"recordActionEvent",
			"recordTouchEvent",
			"key2actionIndex",
			"fixation",
			"key2actionIndex",
			"handleKeyPressEvent",
			"task_sequence",
			"task",
			"ActionPollerClass",
			"attached",
			"create_action_regions",
			"key2actionIndex",
			"keycode2",
			"key2actionIndex",
			"keycode",
			"create_action_regions",
			"keyCode2actionIndex",
			"actionIndex",
			"keypress",
			"eventType2eventCode",
			"ActionPollerClass",
			"create_button_mappings",
			"keyCode2actionIndex",
			"create_action_regions"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "public/mkturk_ActionPoller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10330,
						"regions":
						{
						},
						"selection":
						[
							[
								2129,
								2129
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3616.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "public/mkturk_ScreenDisplayer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19669,
						"regions":
						{
						},
						"selection":
						[
							[
								1318,
								1318
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "public/mkturk_Playspace.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22754,
						"regions":
						{
						},
						"selection":
						[
							[
								2842,
								2854
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1441.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/mkturk_TrialGenerator.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14393,
						"regions":
						{
						},
						"selection":
						[
							[
								4785,
								4805
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "public/mkturk_utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10936,
						"regions":
						{
						},
						"selection":
						[
							[
								862,
								862
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "public/mkturk_ImageBuffer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6317,
						"regions":
						{
						},
						"selection":
						[
							[
								1132,
								1132
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "public/mkturk_TaskStreamer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7867,
						"regions":
						{
						},
						"selection":
						[
							[
								3892,
								3914
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "public/mkturk.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10731,
						"regions":
						{
						},
						"selection":
						[
							[
								8815,
								8815
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 8,
								"count": 265,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2433.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "public/juicer_tester.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7269,
						"regions":
						{
						},
						"selection":
						[
							[
								6499,
								6499
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 464,
								"count": 92,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53167,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										242,
										247
									],
									[
										444,
										449
									],
									[
										691,
										696
									],
									[
										899,
										904
									],
									[
										1164,
										1169
									],
									[
										1263,
										1268
									],
									[
										1609,
										1616
									],
									[
										1627,
										1634
									],
									[
										1640,
										1647
									],
									[
										1868,
										1875
									],
									[
										1880,
										1887
									],
									[
										2026,
										2033
									],
									[
										2044,
										2051
									],
									[
										2057,
										2064
									],
									[
										2285,
										2292
									],
									[
										2297,
										2304
									],
									[
										2530,
										2537
									],
									[
										2704,
										2711
									],
									[
										2731,
										2738
									],
									[
										2978,
										2985
									],
									[
										3129,
										3136
									],
									[
										3230,
										3237
									],
									[
										3357,
										3364
									],
									[
										3408,
										3415
									],
									[
										3488,
										3495
									],
									[
										3608,
										3615
									],
									[
										3821,
										3828
									],
									[
										3904,
										3911
									],
									[
										4238,
										4245
									],
									[
										4459,
										4466
									],
									[
										4611,
										4618
									],
									[
										4762,
										4769
									],
									[
										4895,
										4902
									],
									[
										5133,
										5140
									],
									[
										5368,
										5375
									],
									[
										5384,
										5391
									],
									[
										5457,
										5464
									],
									[
										5626,
										5633
									],
									[
										5708,
										5715
									],
									[
										5773,
										5780
									],
									[
										5852,
										5859
									],
									[
										6052,
										6059
									],
									[
										6274,
										6281
									],
									[
										6473,
										6480
									],
									[
										6871,
										6878
									],
									[
										6967,
										6974
									],
									[
										7091,
										7098
									],
									[
										7133,
										7140
									],
									[
										7162,
										7169
									],
									[
										7211,
										7218
									],
									[
										7305,
										7312
									],
									[
										7359,
										7366
									],
									[
										7502,
										7509
									],
									[
										7584,
										7591
									],
									[
										7702,
										7709
									],
									[
										7837,
										7844
									],
									[
										7855,
										7862
									],
									[
										7915,
										7922
									],
									[
										8074,
										8081
									],
									[
										8126,
										8133
									],
									[
										8352,
										8359
									],
									[
										8437,
										8444
									],
									[
										8750,
										8757
									],
									[
										8948,
										8955
									],
									[
										9283,
										9290
									],
									[
										9481,
										9488
									],
									[
										9640,
										9647
									],
									[
										9735,
										9742
									],
									[
										9905,
										9912
									],
									[
										10061,
										10068
									],
									[
										10097,
										10104
									],
									[
										10140,
										10147
									],
									[
										10165,
										10172
									],
									[
										10213,
										10220
									],
									[
										10366,
										10373
									],
									[
										10407,
										10414
									],
									[
										10596,
										10603
									],
									[
										10696,
										10703
									],
									[
										10805,
										10812
									],
									[
										10850,
										10857
									],
									[
										10940,
										10947
									],
									[
										10982,
										10989
									],
									[
										11074,
										11081
									],
									[
										11113,
										11120
									],
									[
										11175,
										11182
									],
									[
										11242,
										11249
									],
									[
										11511,
										11518
									],
									[
										11560,
										11567
									],
									[
										11582,
										11589
									],
									[
										11687,
										11694
									],
									[
										11724,
										11731
									],
									[
										11885,
										11892
									],
									[
										11990,
										11997
									],
									[
										12030,
										12037
									],
									[
										12214,
										12221
									],
									[
										12239,
										12246
									],
									[
										12287,
										12294
									],
									[
										12399,
										12406
									],
									[
										12595,
										12602
									],
									[
										12716,
										12723
									],
									[
										12767,
										12774
									],
									[
										12836,
										12843
									],
									[
										12944,
										12951
									],
									[
										13059,
										13066
									],
									[
										13130,
										13137
									],
									[
										13346,
										13353
									],
									[
										13557,
										13564
									],
									[
										13779,
										13786
									],
									[
										13820,
										13827
									],
									[
										14010,
										14017
									],
									[
										14388,
										14395
									],
									[
										14925,
										14932
									],
									[
										15380,
										15402
									],
									[
										15767,
										15789
									],
									[
										16058,
										16080
									],
									[
										16333,
										16355
									],
									[
										16763,
										16773
									],
									[
										17071,
										17081
									],
									[
										17466,
										17476
									],
									[
										17730,
										17740
									],
									[
										17943,
										17953
									],
									[
										18012,
										18022
									],
									[
										18120,
										18130
									],
									[
										18235,
										18245
									],
									[
										18306,
										18316
									],
									[
										18522,
										18532
									],
									[
										18880,
										18890
									],
									[
										19248,
										19258
									],
									[
										19396,
										19406
									],
									[
										19707,
										19717
									],
									[
										20102,
										20112
									],
									[
										20366,
										20376
									],
									[
										20579,
										20589
									],
									[
										20648,
										20658
									],
									[
										20756,
										20766
									],
									[
										20871,
										20881
									],
									[
										20942,
										20952
									],
									[
										21158,
										21168
									],
									[
										21516,
										21526
									],
									[
										21790,
										21813
									],
									[
										22013,
										22036
									],
									[
										22278,
										22293
									],
									[
										22539,
										22554
									],
									[
										22712,
										22727
									],
									[
										23011,
										23026
									],
									[
										23272,
										23287
									],
									[
										23445,
										23460
									],
									[
										23673,
										23687
									],
									[
										24068,
										24082
									],
									[
										24290,
										24304
									],
									[
										24718,
										24724
									],
									[
										25003,
										25009
									],
									[
										25016,
										25022
									],
									[
										25352,
										25358
									],
									[
										25415,
										25421
									],
									[
										25812,
										25818
									],
									[
										26053,
										26059
									],
									[
										26102,
										26108
									],
									[
										26448,
										26454
									],
									[
										26537,
										26543
									],
									[
										26845,
										26851
									],
									[
										26966,
										26972
									],
									[
										27114,
										27120
									],
									[
										27142,
										27148
									],
									[
										27188,
										27194
									],
									[
										27393,
										27399
									],
									[
										27440,
										27446
									],
									[
										27458,
										27464
									],
									[
										27584,
										27590
									],
									[
										27815,
										27821
									],
									[
										27856,
										27862
									],
									[
										28225,
										28231
									],
									[
										28259,
										28265
									],
									[
										28566,
										28572
									],
									[
										28937,
										28942
									],
									[
										29228,
										29233
									],
									[
										29430,
										29435
									],
									[
										29677,
										29682
									],
									[
										29885,
										29890
									],
									[
										30150,
										30155
									],
									[
										30249,
										30254
									],
									[
										30674,
										30694
									],
									[
										31126,
										31132
									],
									[
										31423,
										31429
									],
									[
										31490,
										31496
									],
									[
										31888,
										31894
									],
									[
										32214,
										32220
									],
									[
										32563,
										32569
									],
									[
										32960,
										32966
									],
									[
										33273,
										33279
									],
									[
										33672,
										33678
									],
									[
										34044,
										34050
									],
									[
										34422,
										34428
									],
									[
										34696,
										34702
									],
									[
										35067,
										35073
									],
									[
										35476,
										35482
									],
									[
										35789,
										35795
									],
									[
										36153,
										36159
									],
									[
										36387,
										36393
									],
									[
										36621,
										36627
									],
									[
										36953,
										36959
									],
									[
										37187,
										37193
									],
									[
										37421,
										37427
									],
									[
										37752,
										37758
									],
									[
										37982,
										37988
									],
									[
										38287,
										38293
									],
									[
										38516,
										38522
									],
									[
										38745,
										38751
									],
									[
										38974,
										38980
									],
									[
										39203,
										39209
									],
									[
										39432,
										39438
									],
									[
										39661,
										39667
									],
									[
										39890,
										39896
									],
									[
										40119,
										40125
									],
									[
										40348,
										40354
									],
									[
										40577,
										40583
									],
									[
										40806,
										40812
									],
									[
										41035,
										41041
									],
									[
										41264,
										41270
									],
									[
										41493,
										41499
									],
									[
										41722,
										41728
									],
									[
										41951,
										41957
									],
									[
										42180,
										42186
									],
									[
										42409,
										42415
									],
									[
										42638,
										42644
									],
									[
										42867,
										42873
									],
									[
										43281,
										43308
									],
									[
										43756,
										43783
									],
									[
										43804,
										43831
									],
									[
										44191,
										44218
									],
									[
										44586,
										44613
									],
									[
										44628,
										44655
									],
									[
										45071,
										45098
									],
									[
										45113,
										45140
									],
									[
										45498,
										45525
									],
									[
										45845,
										45872
									],
									[
										46278,
										46305
									],
									[
										46593,
										46620
									],
									[
										46914,
										46941
									],
									[
										47228,
										47255
									],
									[
										47584,
										47611
									],
									[
										47993,
										48020
									],
									[
										48293,
										48320
									],
									[
										48592,
										48619
									],
									[
										48865,
										48892
									],
									[
										49178,
										49184
									],
									[
										49235,
										49241
									],
									[
										49294,
										49300
									],
									[
										49578,
										49584
									],
									[
										49768,
										49774
									],
									[
										49980,
										49986
									],
									[
										50000,
										50006
									],
									[
										50187,
										50193
									],
									[
										50299,
										50305
									],
									[
										50551,
										50557
									],
									[
										50618,
										50624
									],
									[
										50687,
										50693
									],
									[
										50971,
										50977
									],
									[
										51161,
										51167
									],
									[
										51373,
										51379
									],
									[
										51393,
										51399
									],
									[
										51580,
										51586
									],
									[
										51692,
										51698
									],
									[
										51944,
										51950
									],
									[
										52011,
										52017
									],
									[
										52080,
										52086
									],
									[
										52364,
										52370
									],
									[
										52554,
										52560
									],
									[
										52776,
										52782
									],
									[
										52806,
										52812
									],
									[
										52993,
										52999
									],
									[
										53105,
										53111
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								52415,
								52415
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 12,
								"count": 2107,
								"modified": false,
								"selection": false,
								"status": -1,
								"syntax": "plain text"
							},
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 18,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 19485.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "public/io/mkturk_SoundPlayer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3637,
						"regions":
						{
						},
						"selection":
						[
							[
								1297,
								1297
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 365.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "public/mkturk_style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6667,
						"regions":
						{
						},
						"selection":
						[
							[
								380,
								380
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "css"
							},
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "public/mkturk_Reinforcer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2794,
						"regions":
						{
						},
						"selection":
						[
							[
								538,
								538
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "public/mkturk_usb.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8286,
						"regions":
						{
						},
						"selection":
						[
							[
								7129,
								7152
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "public/task_specification.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2238,
						"regions":
						{
						},
						"selection":
						[
							[
								871,
								871
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "json"
							},
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "public/setup_MechanicalTurk_session.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4218,
						"regions":
						{
						},
						"selection":
						[
							[
								2157,
								2157
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "public/mkturk_UX.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9333,
						"regions":
						{
						},
						"selection":
						[
							[
								687,
								687
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "public/mkturk_BiasDetection.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6631,
						"regions":
						{
						},
						"selection":
						[
							[
								2084,
								2084
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "public/mkturk_SessionBootStrapper.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7799,
						"regions":
						{
						},
						"selection":
						[
							[
								1076,
								1076
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "public/setup_upstairs_session.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3330,
						"regions":
						{
						},
						"selection":
						[
							[
								883,
								883
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "public/mkturk_CheckPointer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5051,
						"regions":
						{
						},
						"selection":
						[
							[
								233,
								233
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "javascript"
							},
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "public/landing_pages/inlab/landing_page_selector.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1841,
						"regions":
						{
						},
						"selection":
						[
							[
								769,
								769
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": -1,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "docs/installing_ptap_on_tablets.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4726,
						"regions":
						{
						},
						"selection":
						[
							[
								3249,
								3249
							]
						],
						"settings":
						{
							"WordCount":
							{
								"changes": 17,
								"count": 694,
								"modified": true,
								"selection": true,
								"status": -1,
								"syntax": "plain text"
							},
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 37.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ptap.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 404.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
